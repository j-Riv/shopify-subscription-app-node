{"version":3,"sources":["utils/index.ts","data/countries.ts","components/Toast.tsx","components/Spinner.tsx","components/ShippingAddressForm.tsx","components/Loader.tsx","components/Button.tsx","components/ActionButtons.tsx","components/SubscriptionCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["formatDate","date","split","formatSubscriptionId","subscriptionId","str","length","accountRedirect","window","setTimeout","location","replace","countries","Argentina","Australia","Brazil","Canada","Chile","China","Columbia","Egypt","Guatemala","India","Indonesia","Ireland","Italy","Japan","Malaysia","Mexico","Nigeria","Panama","Peru","Phillipines","Portugal","Romania","Russia","Spain","Thailand","Snackbar","styled","div","Toast","show","isError","toastMsg","className","IconSpinner","svg","Spinner","aria-hidden","focusable","role","viewBox","d","fill","Container","GridTwoColumn","GridThreeColumn","Actions","ShippingAddressForm","props","shop","customerId","token","subscription","setOpen","getSubscriptions","Countries","useState","provinces","setProvinces","address","deliveryMethod","company","setCompany","address1","setAddress1","address2","setAddress2","city","setCity","province","setProvince","country","setCountry","zip","setZip","firstName","setFirstName","lastName","setLastName","phone","setPhone","showToast","setShowToast","isToastError","setIsToastError","setToastMsg","loading","setLoading","useEffect","handleHideToast","form","createRef","validate","current","reportValidity","updateShippingAddress","a","fetch","method","headers","Accept","body","JSON","stringify","subscriptionContractId","id","response","json","data","errors","message","console","log","acceptCharset","onSubmit","e","preventDefault","ref","htmlFor","type","name","value","onChange","event","fn","target","placeholder","ln","addr1","addr2","map","c","data-provinces","pattern","onClick","disabled","load3","keyframes","Loader","Button","color","handleClick","label","error","setError","handler","ActionsContainer","ActionButtons","Status","updateStatus","updatePaymentMethod","handleUpdateAddress","handleActivate","ACTIVE","handlePause","PAUSE","handleCancel","CANCEL","handleUpdatePaymentMethod","customerPaymentMethod","status","SubscriptionContainer","ChevronUp","IconChenvronUp","IconChenvronDown","SubscriptionCard","index","handleSubscriptionToggle","expanded","s","node","createdAt","nextBillingDate","total","lines","edges","forEach","line","l","parseFloat","currentPrice","amount","parseInt","quantity","deliveryPrice","toFixed","getTotalPrice","billingPolicy","intervalCount","interval","toLowerCase","provinceCode","shipTo","getShippingAddress","instrument","maskedNumber","brand","toUpperCase","getBillingInfo","variantImage","src","originalSrc","alt","altText","title","sku","ACTIONS","reducer","state","action","Object","keys","key","Error","App","setShop","setToken","setCustomerId","subscriptions","setSubscriptions","setSubscription","open","useReducer","count","initialState","i","dispatch","useCallback","shopName","accessToken","customer","params","queryString","parse","search","customer_id","updatedSubscriptionContractId","paymentMethodId","style","textAlign","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.577a4f08.chunk.js","sourcesContent":["export const formatDate = (date: string): string => date.split(\"T\")[0]\n\nexport const formatSubscriptionId = (subscriptionId: string): string => {\n  const str: string[] = subscriptionId.split(\"/\")\n  return str[str.length - 1]\n}\n\nexport const accountRedirect = () => {\n  window.setTimeout(() => {\n    window.location.replace(\"/account\")\n  }, 1500)\n}\n","const countries = {\n  Argentina: [\n    [\"Buenos Aires\", \"Buenos Aires Province\"],\n    [\"Catamarca\", \"Catamarca\"],\n    [\"Chaco\", \"Chaco\"],\n    [\"Chubut\", \"Chubut\"],\n    [\"Ciudad Autónoma de Buenos Aires\", \"Buenos Aires (Autonomous City)\"],\n    [\"Corrientes\", \"Corrientes\"],\n    [\"Córdoba\", \"Córdoba\"],\n    [\"Entre Ríos\", \"Entre Ríos\"],\n    [\"Formosa\", \"Formosa\"],\n    [\"Jujuy\", \"Jujuy\"],\n    [\"La Pampa\", \"La Pampa\"],\n    [\"La Rioja\", \"La Rioja\"],\n    [\"Mendoza\", \"Mendoza\"],\n    [\"Misiones\", \"Misiones\"],\n    [\"Neuquén\", \"Neuquén\"],\n    [\"Río Negro\", \"Río Negro\"],\n    [\"Salta\", \"Salta\"],\n    [\"San Juan\", \"San Juan\"],\n    [\"San Luis\", \"San Luis\"],\n    [\"Santa Cruz\", \"Santa Cruz\"],\n    [\"Santa Fe\", \"Santa Fe\"],\n    [\"Santiago Del Estero\", \"Santiago del Estero\"],\n    [\"Tierra Del Fuego\", \"Tierra del Fuego\"],\n    [\"Tucumán\", \"Tucumán\"],\n  ],\n  Australia: [\n    [\"Australian Capital Territory\", \"Australian Capital Territory\"],\n    [\"New South Wales\", \"New South Wales\"],\n    [\"Northern Territory\", \"Northern Territory\"],\n    [\"Queensland\", \"Queensland\"],\n    [\"South Australia\", \"South Australia\"],\n    [\"Tasmania\", \"Tasmania\"],\n    [\"Victoria\", \"Victoria\"],\n    [\"Western Australia\", \"Western Australia\"],\n  ],\n  Brazil: [\n    [\"Acre\", \"Acre\"],\n    [\"Alagoas\", \"Alagoas\"],\n    [\"Amapá\", \"Amapá\"],\n    [\"Amazonas\", \"Amazonas\"],\n    [\"Bahia\", \"Bahia\"],\n    [\"Ceará\", \"Ceará\"],\n    [\"Distrito Federal\", \"Federal District\"],\n    [\"Espírito Santo\", \"Espírito Santo\"],\n    [\"Goiás\", \"Goiás\"],\n    [\"Maranhão\", \"Maranhão\"],\n    [\"Mato Grosso\", \"Mato Grosso\"],\n    [\"Mato Grosso do Sul\", \"Mato Grosso do Sul\"],\n    [\"Minas Gerais\", \"Minas Gerais\"],\n    [\"Paraná\", \"Paraná\"],\n    [\"Paraíba\", \"Paraíba\"],\n    [\"Pará\", \"Pará\"],\n    [\"Pernambuco\", \"Pernambuco\"],\n    [\"Piauí\", \"Piauí\"],\n    [\"Rio Grande do Norte\", \"Rio Grande do Norte\"],\n    [\"Rio Grande do Sul\", \"Rio Grande do Sul\"],\n    [\"Rio de Janeiro\", \"Rio de Janeiro\"],\n    [\"Rondônia\", \"Rondônia\"],\n    [\"Roraima\", \"Roraima\"],\n    [\"Santa Catarina\", \"Santa Catarina\"],\n    [\"Sergipe\", \"Sergipe\"],\n    [\"São Paulo\", \"São Paulo\"],\n    [\"Tocantins\", \"Tocantins\"],\n  ],\n  Canada: [\n    [\"Alberta\", \"Alberta\"],\n    [\"British Columbia\", \"British Columbia\"],\n    [\"Manitoba\", \"Manitoba\"],\n    [\"New Brunswick\", \"New Brunswick\"],\n    [\"Newfoundland and Labrador\", \"Newfoundland and Labrador\"],\n    [\"Northwest Territories\", \"Northwest Territories\"],\n    [\"Nova Scotia\", \"Nova Scotia\"],\n    [\"Nunavut\", \"Nunavut\"],\n    [\"Ontario\", \"Ontario\"],\n    [\"Prince Edward Island\", \"Prince Edward Island\"],\n    [\"Quebec\", \"Quebec\"],\n    [\"Saskatchewan\", \"Saskatchewan\"],\n    [\"Yukon\", \"Yukon\"],\n  ],\n  Chile: [\n    [\"Antofagasta\", \"Antofagasta\"],\n    [\"Araucanía\", \"Araucanía\"],\n    [\"Arica and Parinacota\", \"Arica y Parinacota\"],\n    [\"Atacama\", \"Atacama\"],\n    [\"Aysén\", \"Aysén\"],\n    [\"Biobío\", \"Bío Bío\"],\n    [\"Coquimbo\", \"Coquimbo\"],\n    [\"Los Lagos\", \"Los Lagos\"],\n    [\"Los Ríos\", \"Los Ríos\"],\n    [\"Magallanes\", \"Magallanes Region\"],\n    [\"Maule\", \"Maule\"],\n    [\"O Higgins\", \"Libertador General Bernardo O’Higgins\"],\n    [\"Santiago\", \"Santiago Metropolitan\"],\n    [\"Tarapacá\", \"Tarapacá\"],\n    [\"Valparaíso\", \"Valparaíso\"],\n    [\"Ñuble\", \"Ñuble\"],\n  ],\n  China: [\n    [\"Anhui\", \"Anhui\"],\n    [\"Beijing\", \"Beijing\"],\n    [\"Chongqing\", \"Chongqing\"],\n    [\"Fujian\", \"Fujian\"],\n    [\"Gansu\", \"Gansu\"],\n    [\"Guangdong\", \"Guangdong\"],\n    [\"Guangxi\", \"Guangxi\"],\n    [\"Guizhou\", \"Guizhou\"],\n    [\"Hainan\", \"Hainan\"],\n    [\"Hebei\", \"Hebei\"],\n    [\"Heilongjiang\", \"Heilongjiang\"],\n    [\"Henan\", \"Henan\"],\n    [\"Hubei\", \"Hubei\"],\n    [\"Hunan\", \"Hunan\"],\n    [\"Inner Mongolia\", \"Inner Mongolia\"],\n    [\"Jiangsu\", \"Jiangsu\"],\n    [\"Jiangxi\", \"Jiangxi\"],\n    [\"Jilin\", \"Jilin\"],\n    [\"Liaoning\", \"Liaoning\"],\n    [\"Ningxia\", \"Ningxia\"],\n    [\"Qinghai\", \"Qinghai\"],\n    [\"Shaanxi\", \"Shaanxi\"],\n    [\"Shandong\", \"Shandong\"],\n    [\"Shanghai\", \"Shanghai\"],\n    [\"Shanxi\", \"Shanxi\"],\n    [\"Sichuan\", \"Sichuan\"],\n    [\"Tianjin\", \"Tianjin\"],\n    [\"Xinjiang\", \"Xinjiang\"],\n    [\"Xizang\", \"Tibet\"],\n    [\"Yunnan\", \"Yunnan\"],\n    [\"Zhejiang\", \"Zhejiang\"],\n  ],\n  Columbia: [\n    [\"Amazonas\", \"Amazonas\"],\n    [\"Antioquia\", \"Antioquia\"],\n    [\"Arauca\", \"Arauca\"],\n    [\"Atlántico\", \"Atlántico\"],\n    [\"Bogotá, D.C.\", \"Capital District\"],\n    [\"Bolívar\", \"Bolívar\"],\n    [\"Boyacá\", \"Boyacá\"],\n    [\"Caldas\", \"Caldas\"],\n    [\"Caquetá\", \"Caquetá\"],\n    [\"Casanare\", \"Casanare\"],\n    [\"Cauca\", \"Cauca\"],\n    [\"Cesar\", \"Cesar\"],\n    [\"Chocó\", \"Chocó\"],\n    [\"Cundinamarca\", \"Cundinamarca\"],\n    [\"Córdoba\", \"Córdoba\"],\n    [\"Guainía\", \"Guainía\"],\n    [\"Guaviare\", \"Guaviare\"],\n    [\"Huila\", \"Huila\"],\n    [\"La Guajira\", \"La Guajira\"],\n    [\"Magdalena\", \"Magdalena\"],\n    [\"Meta\", \"Meta\"],\n    [\"Nariño\", \"Nariño\"],\n    [\"Norte de Santander\", \"Norte de Santander\"],\n    [\"Putumayo\", \"Putumayo\"],\n    [\"Quindío\", \"Quindío\"],\n    [\"Risaralda\", \"Risaralda\"],\n    [\n      \"San Andrés, Providencia y Santa Catalina\",\n      \"San Andrés \\u0026 Providencia\",\n    ],\n    [\"Santander\", \"Santander\"],\n    [\"Sucre\", \"Sucre\"],\n    [\"Tolima\", \"Tolima\"],\n    [\"Valle del Cauca\", \"Valle del Cauca\"],\n    [\"Vaupés\", \"Vaupés\"],\n    [\"Vichada\", \"Vichada\"],\n  ],\n  Egypt: [\n    [\"6th of October\", \"6th of October\"],\n    [\"Al Sharqia\", \"Al Sharqia\"],\n    [\"Alexandria\", \"Alexandria\"],\n    [\"Aswan\", \"Aswan\"],\n    [\"Asyut\", \"Asyut\"],\n    [\"Beheira\", \"Beheira\"],\n    [\"Beni Suef\", \"Beni Suef\"],\n    [\"Cairo\", \"Cairo\"],\n    [\"Dakahlia\", \"Dakahlia\"],\n    [\"Damietta\", \"Damietta\"],\n    [\"Faiyum\", \"Faiyum\"],\n    [\"Gharbia\", \"Gharbia\"],\n    [\"Giza\", \"Giza\"],\n    [\"Helwan\", \"Helwan\"],\n    [\"Ismailia\", \"Ismailia\"],\n    [\"Kafr el-Sheikh\", \"Kafr el-Sheikh\"],\n    [\"Luxor\", \"Luxor\"],\n    [\"Matrouh\", \"Matrouh\"],\n    [\"Minya\", \"Minya\"],\n    [\"Monufia\", \"Monufia\"],\n    [\"New Valley\", \"New Valley\"],\n    [\"North Sinai\", \"North Sinai\"],\n    [\"Port Said\", \"Port Said\"],\n    [\"Qalyubia\", \"Qalyubia\"],\n    [\"Qena\", \"Qena\"],\n    [\"Red Sea\", \"Red Sea\"],\n    [\"Sohag\", \"Sohag\"],\n    [\"South Sinai\", \"South Sinai\"],\n    [\"Suez\", \"Suez\"],\n  ],\n  Guatemala: [\n    [\"Alta Verapaz\", \"Alta Verapaz\"],\n    [\"Baja Verapaz\", \"Baja Verapaz\"],\n    [\"Chimaltenango\", \"Chimaltenango\"],\n    [\"Chiquimula\", \"Chiquimula\"],\n    [\"El Progreso\", \"El Progreso\"],\n    [\"Escuintla\", \"Escuintla\"],\n    [\"Guatemala\", \"Guatemala\"],\n    [\"Huehuetenango\", \"Huehuetenango\"],\n    [\"Izabal\", \"Izabal\"],\n    [\"Jalapa\", \"Jalapa\"],\n    [\"Jutiapa\", \"Jutiapa\"],\n    [\"Petén\", \"Petén\"],\n    [\"Quetzaltenango\", \"Quetzaltenango\"],\n    [\"Quiché\", \"Quiché\"],\n    [\"Retalhuleu\", \"Retalhuleu\"],\n    [\"Sacatepéquez\", \"Sacatepéquez\"],\n    [\"San Marcos\", \"San Marcos\"],\n    [\"Santa Rosa\", \"Santa Rosa\"],\n    [\"Sololá\", \"Sololá\"],\n    [\"Suchitepéquez\", \"Suchitepéquez\"],\n    [\"Totonicapán\", \"Totonicapán\"],\n    [\"Zacapa\", \"Zacapa\"],\n  ],\n  India: [\n    [\"Andaman and Nicobar Islands\", \"Andaman and Nicobar Islands\"],\n    [\"Andhra Pradesh\", \"Andhra Pradesh\"],\n    [\"Arunachal Pradesh\", \"Arunachal Pradesh\"],\n    [\"Assam\", \"Assam\"],\n    [\"Bihar\", \"Bihar\"],\n    [\"Chandigarh\", \"Chandigarh\"],\n    [\"Chhattisgarh\", \"Chhattisgarh\"],\n    [\"Dadra and Nagar Haveli\", \"Dadra and Nagar Haveli\"],\n    [\"Daman and Diu\", \"Daman and Diu\"],\n    [\"Delhi\", \"Delhi\"],\n    [\"Goa\", \"Goa\"],\n    [\"Gujarat\", \"Gujarat\"],\n    [\"Haryana\", \"Haryana\"],\n    [\"Himachal Pradesh\", \"Himachal Pradesh\"],\n    [\"Jammu and Kashmir\", \"Jammu and Kashmir\"],\n    [\"Jharkhand\", \"Jharkhand\"],\n    [\"Karnataka\", \"Karnataka\"],\n    [\"Kerala\", \"Kerala\"],\n    [\"Ladakh\", \"Ladakh\"],\n    [\"Lakshadweep\", \"Lakshadweep\"],\n    [\"Madhya Pradesh\", \"Madhya Pradesh\"],\n    [\"Maharashtra\", \"Maharashtra\"],\n    [\"Manipur\", \"Manipur\"],\n    [\"Meghalaya\", \"Meghalaya\"],\n    [\"Mizoram\", \"Mizoram\"],\n    [\"Nagaland\", \"Nagaland\"],\n    [\"Odisha\", \"Odisha\"],\n    [\"Puducherry\", \"Puducherry\"],\n    [\"Punjab\", \"Punjab\"],\n    [\"Rajasthan\", \"Rajasthan\"],\n    [\"Sikkim\", \"Sikkim\"],\n    [\"Tamil Nadu\", \"Tamil Nadu\"],\n    [\"Telangana\", \"Telangana\"],\n    [\"Tripura\", \"Tripura\"],\n    [\"Uttar Pradesh\", \"Uttar Pradesh\"],\n    [\"Uttarakhand\", \"Uttarakhand\"],\n    [\"West Bengal\", \"West Bengal\"],\n  ],\n  \"Hong Kong\": [\n    [\"Hong Kong Island\", \"Hong Kong Island\"],\n    [\"Kowloon\", \"Kowloon\"],\n    [\"New Territories\", \"New Territories\"],\n  ],\n  Indonesia: [\n    [\"Aceh\", \"Aceh\"],\n    [\"Bali\", \"Bali\"],\n    [\"Bangka Belitung\", \"Bangka–Belitung Islands\"],\n    [\"Banten\", \"Banten\"],\n    [\"Bengkulu\", \"Bengkulu\"],\n    [\"Gorontalo\", \"Gorontalo\"],\n    [\"Jakarta\", \"Jakarta\"],\n    [\"Jambi\", \"Jambi\"],\n    [\"Jawa Barat\", \"West Java\"],\n    [\"Jawa Tengah\", \"Central Java\"],\n    [\"Jawa Timur\", \"East Java\"],\n    [\"Kalimantan Barat\", \"West Kalimantan\"],\n    [\"Kalimantan Selatan\", \"South Kalimantan\"],\n    [\"Kalimantan Tengah\", \"Central Kalimantan\"],\n    [\"Kalimantan Timur\", \"East Kalimantan\"],\n    [\"Kalimantan Utara\", \"North Kalimantan\"],\n    [\"Kepulauan Riau\", \"Riau Islands\"],\n    [\"Lampung\", \"Lampung\"],\n    [\"Maluku\", \"Maluku\"],\n    [\"Maluku Utara\", \"North Maluku\"],\n    [\"North Sumatra\", \"North Sumatra\"],\n    [\"Nusa Tenggara Barat\", \"West Nusa Tenggara\"],\n    [\"Nusa Tenggara Timur\", \"East Nusa Tenggara\"],\n    [\"Papua\", \"Papua\"],\n    [\"Papua Barat\", \"West Papua\"],\n    [\"Riau\", \"Riau\"],\n    [\"South Sumatra\", \"South Sumatra\"],\n    [\"Sulawesi Barat\", \"West Sulawesi\"],\n    [\"Sulawesi Selatan\", \"South Sulawesi\"],\n    [\"Sulawesi Tengah\", \"Central Sulawesi\"],\n    [\"Sulawesi Tenggara\", \"Southeast Sulawesi\"],\n    [\"Sulawesi Utara\", \"North Sulawesi\"],\n    [\"West Sumatra\", \"West Sumatra\"],\n    [\"Yogyakarta\", \"Yogyakarta\"],\n  ],\n  Ireland: [\n    [\"Carlow\", \"Carlow\"],\n    [\"Cavan\", \"Cavan\"],\n    [\"Clare\", \"Clare\"],\n    [\"Cork\", \"Cork\"],\n    [\"Donegal\", \"Donegal\"],\n    [\"Dublin\", \"Dublin\"],\n    [\"Galway\", \"Galway\"],\n    [\"Kerry\", \"Kerry\"],\n    [\"Kildare\", \"Kildare\"],\n    [\"Kilkenny\", \"Kilkenny\"],\n    [\"Laois\", \"Laois\"],\n    [\"Leitrim\", \"Leitrim\"],\n    [\"Limerick\", \"Limerick\"],\n    [\"Longford\", \"Longford\"],\n    [\"Louth\", \"Louth\"],\n    [\"Mayo\", \"Mayo\"],\n    [\"Meath\", \"Meath\"],\n    [\"Monaghan\", \"Monaghan\"],\n    [\"Offaly\", \"Offaly\"],\n    [\"Roscommon\", \"Roscommon\"],\n    [\"Sligo\", \"Sligo\"],\n    [\"Tipperary\", \"Tipperary\"],\n    [\"Waterford\", \"Waterford\"],\n    [\"Westmeath\", \"Westmeath\"],\n    [\"Wexford\", \"Wexford\"],\n    [\"Wicklow\", \"Wicklow\"],\n  ],\n  Italy: [\n    [\"Agrigento\", \"Agrigento\"],\n    [\"Alessandria\", \"Alessandria\"],\n    [\"Ancona\", \"Ancona\"],\n    [\"Aosta\", \"Aosta\"],\n    [\"Arezzo\", \"Arezzo\"],\n    [\"Ascoli Piceno\", \"Ascoli Piceno\"],\n    [\"Asti\", \"Asti\"],\n    [\"Avellino\", \"Avellino\"],\n    [\"Bari\", \"Bari\"],\n    [\"Barletta-Andria-Trani\", \"Barletta-Andria-Trani\"],\n    [\"Belluno\", \"Belluno\"],\n    [\"Benevento\", \"Benevento\"],\n    [\"Bergamo\", \"Bergamo\"],\n    [\"Biella\", \"Biella\"],\n    [\"Bologna\", \"Bologna\"],\n    [\"Bolzano\", \"South Tyrol\"],\n    [\"Brescia\", \"Brescia\"],\n    [\"Brindisi\", \"Brindisi\"],\n    [\"Cagliari\", \"Cagliari\"],\n    [\"Caltanissetta\", \"Caltanissetta\"],\n    [\"Campobasso\", \"Campobasso\"],\n    [\"Carbonia-Iglesias\", \"Carbonia-Iglesias\"],\n    [\"Caserta\", \"Caserta\"],\n    [\"Catania\", \"Catania\"],\n    [\"Catanzaro\", \"Catanzaro\"],\n    [\"Chieti\", \"Chieti\"],\n    [\"Como\", \"Como\"],\n    [\"Cosenza\", \"Cosenza\"],\n    [\"Cremona\", \"Cremona\"],\n    [\"Crotone\", \"Crotone\"],\n    [\"Cuneo\", \"Cuneo\"],\n    [\"Enna\", \"Enna\"],\n    [\"Fermo\", \"Fermo\"],\n    [\"Ferrara\", \"Ferrara\"],\n    [\"Firenze\", \"Florence\"],\n    [\"Foggia\", \"Foggia\"],\n    [\"Forlì-Cesena\", \"Forlì-Cesena\"],\n    [\"Frosinone\", \"Frosinone\"],\n    [\"Genova\", \"Genoa\"],\n    [\"Gorizia\", \"Gorizia\"],\n    [\"Grosseto\", \"Grosseto\"],\n    [\"Imperia\", \"Imperia\"],\n    [\"Isernia\", \"Isernia\"],\n    [\"L'Aquila\", \"L’Aquila\"],\n    [\"La Spezia\", \"La Spezia\"],\n    [\"Latina\", \"Latina\"],\n    [\"Lecce\", \"Lecce\"],\n    [\"Lecco\", \"Lecco\"],\n    [\"Livorno\", \"Livorno\"],\n    [\"Lodi\", \"Lodi\"],\n    [\"Lucca\", \"Lucca\"],\n    [\"Macerata\", \"Macerata\"],\n    [\"Mantova\", \"Mantua\"],\n    [\"Massa-Carrara\", \"Massa and Carrara\"],\n    [\"Matera\", \"Matera\"],\n    [\"Medio Campidano\", \"Medio Campidano\"],\n    [\"Messina\", \"Messina\"],\n    [\"Milano\", \"Milan\"],\n    [\"Modena\", \"Modena\"],\n    [\"Monza e Brianza\", \"Monza and Brianza\"],\n    [\"Napoli\", \"Naples\"],\n    [\"Novara\", \"Novara\"],\n    [\"Nuoro\", \"Nuoro\"],\n    [\"Ogliastra\", \"Ogliastra\"],\n    [\"Olbia-Tempio\", \"Olbia-Tempio\"],\n    [\"Oristano\", \"Oristano\"],\n    [\"Padova\", \"Padua\"],\n    [\"Palermo\", \"Palermo\"],\n    [\"Parma\", \"Parma\"],\n    [\"Pavia\", \"Pavia\"],\n    [\"Perugia\", \"Perugia\"],\n    [\"Pesaro e Urbino\", \"Pesaro and Urbino\"],\n    [\"Pescara\", \"Pescara\"],\n    [\"Piacenza\", \"Piacenza\"],\n    [\"Pisa\", \"Pisa\"],\n    [\"Pistoia\", \"Pistoia\"],\n    [\"Pordenone\", \"Pordenone\"],\n    [\"Potenza\", \"Potenza\"],\n    [\"Prato\", \"Prato\"],\n    [\"Ragusa\", \"Ragusa\"],\n    [\"Ravenna\", \"Ravenna\"],\n    [\"Reggio Calabria\", \"Reggio Calabria\"],\n    [\"Reggio Emilia\", \"Reggio Emilia\"],\n    [\"Rieti\", \"Rieti\"],\n    [\"Rimini\", \"Rimini\"],\n    [\"Roma\", \"Rome\"],\n    [\"Rovigo\", \"Rovigo\"],\n    [\"Salerno\", \"Salerno\"],\n    [\"Sassari\", \"Sassari\"],\n    [\"Savona\", \"Savona\"],\n    [\"Siena\", \"Siena\"],\n    [\"Siracusa\", \"Syracuse\"],\n    [\"Sondrio\", \"Sondrio\"],\n    [\"Taranto\", \"Taranto\"],\n    [\"Teramo\", \"Teramo\"],\n    [\"Terni\", \"Terni\"],\n    [\"Torino\", \"Turin\"],\n    [\"Trapani\", \"Trapani\"],\n    [\"Trento\", \"Trentino\"],\n    [\"Treviso\", \"Treviso\"],\n    [\"Trieste\", \"Trieste\"],\n    [\"Udine\", \"Udine\"],\n    [\"Varese\", \"Varese\"],\n    [\"Venezia\", \"Venice\"],\n    [\"Verbano-Cusio-Ossola\", \"Verbano-Cusio-Ossola\"],\n    [\"Vercelli\", \"Vercelli\"],\n    [\"Verona\", \"Verona\"],\n    [\"Vibo Valentia\", \"Vibo Valentia\"],\n    [\"Vicenza\", \"Vicenza\"],\n    [\"Viterbo\", \"Viterbo\"],\n  ],\n  Japan: [\n    [\"Aichi\", \"Aichi\"],\n    [\"Akita\", \"Akita\"],\n    [\"Aomori\", \"Aomori\"],\n    [\"Chiba\", \"Chiba\"],\n    [\"Ehime\", \"Ehime\"],\n    [\"Fukui\", \"Fukui\"],\n    [\"Fukuoka\", \"Fukuoka\"],\n    [\"Fukushima\", \"Fukushima\"],\n    [\"Gifu\", \"Gifu\"],\n    [\"Gunma\", \"Gunma\"],\n    [\"Hiroshima\", \"Hiroshima\"],\n    [\"Hokkaidō\", \"Hokkaido\"],\n    [\"Hyōgo\", \"Hyogo\"],\n    [\"Ibaraki\", \"Ibaraki\"],\n    [\"Ishikawa\", \"Ishikawa\"],\n    [\"Iwate\", \"Iwate\"],\n    [\"Kagawa\", \"Kagawa\"],\n    [\"Kagoshima\", \"Kagoshima\"],\n    [\"Kanagawa\", \"Kanagawa\"],\n    [\"Kumamoto\", \"Kumamoto\"],\n    [\"Kyōto\", \"Kyoto\"],\n    [\"Kōchi\", \"Kochi\"],\n    [\"Mie\", \"Mie\"],\n    [\"Miyagi\", \"Miyagi\"],\n    [\"Miyazaki\", \"Miyazaki\"],\n    [\"Nagano\", \"Nagano\"],\n    [\"Nagasaki\", \"Nagasaki\"],\n    [\"Nara\", \"Nara\"],\n    [\"Niigata\", \"Niigata\"],\n    [\"Okayama\", \"Okayama\"],\n    [\"Okinawa\", \"Okinawa\"],\n    [\"Saga\", \"Saga\"],\n    [\"Saitama\", \"Saitama\"],\n    [\"Shiga\", \"Shiga\"],\n    [\"Shimane\", \"Shimane\"],\n    [\"Shizuoka\", \"Shizuoka\"],\n    [\"Tochigi\", \"Tochigi\"],\n    [\"Tokushima\", \"Tokushima\"],\n    [\"Tottori\", \"Tottori\"],\n    [\"Toyama\", \"Toyama\"],\n    [\"Tōkyō\", \"Tokyo\"],\n    [\"Wakayama\", \"Wakayama\"],\n    [\"Yamagata\", \"Yamagata\"],\n    [\"Yamaguchi\", \"Yamaguchi\"],\n    [\"Yamanashi\", \"Yamanashi\"],\n    [\"Ōita\", \"Oita\"],\n    [\"Ōsaka\", \"Osaka\"],\n  ],\n  Malaysia: [\n    [\"Johor\", \"Johor\"],\n    [\"Kedah\", \"Kedah\"],\n    [\"Kelantan\", \"Kelantan\"],\n    [\"Kuala Lumpur\", \"Kuala Lumpur\"],\n    [\"Labuan\", \"Labuan\"],\n    [\"Melaka\", \"Malacca\"],\n    [\"Negeri Sembilan\", \"Negeri Sembilan\"],\n    [\"Pahang\", \"Pahang\"],\n    [\"Penang\", \"Penang\"],\n    [\"Perak\", \"Perak\"],\n    [\"Perlis\", \"Perlis\"],\n    [\"Putrajaya\", \"Putrajaya\"],\n    [\"Sabah\", \"Sabah\"],\n    [\"Sarawak\", \"Sarawak\"],\n    [\"Selangor\", \"Selangor\"],\n    [\"Terengganu\", \"Terengganu\"],\n  ],\n  Mexico: [\n    [\"Aguascalientes\", \"Aguascalientes\"],\n    [\"Baja California\", \"Baja California\"],\n    [\"Baja California Sur\", \"Baja California Sur\"],\n    [\"Campeche\", \"Campeche\"],\n    [\"Chiapas\", \"Chiapas\"],\n    [\"Chihuahua\", \"Chihuahua\"],\n    [\"Ciudad de México\", \"Ciudad de Mexico\"],\n    [\"Coahuila\", \"Coahuila\"],\n    [\"Colima\", \"Colima\"],\n    [\"Durango\", \"Durango\"],\n    [\"Guanajuato\", \"Guanajuato\"],\n    [\"Guerrero\", \"Guerrero\"],\n    [\"Hidalgo\", \"Hidalgo\"],\n    [\"Jalisco\", \"Jalisco\"],\n    [\"Michoacán\", \"Michoacán\"],\n    [\"Morelos\", \"Morelos\"],\n    [\"México\", \"Mexico State\"],\n    [\"Nayarit\", \"Nayarit\"],\n    [\"Nuevo León\", \"Nuevo León\"],\n    [\"Oaxaca\", \"Oaxaca\"],\n    [\"Puebla\", \"Puebla\"],\n    [\"Querétaro\", \"Querétaro\"],\n    [\"Quintana Roo\", \"Quintana Roo\"],\n    [\"San Luis Potosí\", \"San Luis Potosí\"],\n    [\"Sinaloa\", \"Sinaloa\"],\n    [\"Sonora\", \"Sonora\"],\n    [\"Tabasco\", \"Tabasco\"],\n    [\"Tamaulipas\", \"Tamaulipas\"],\n    [\"Tlaxcala\", \"Tlaxcala\"],\n    [\"Veracruz\", \"Veracruz\"],\n    [\"Yucatán\", \"Yucatán\"],\n    [\"Zacatecas\", \"Zacatecas\"],\n  ],\n  \"New Zealand\": [\n    [\"Auckland\", \"Auckland\"],\n    [\"Bay of Plenty\", \"Bay of Plenty\"],\n    [\"Canterbury\", \"Canterbury\"],\n    [\"Chatham Islands\", \"Chatham Islands\"],\n    [\"Gisborne\", \"Gisborne\"],\n    [\"Hawkes Bay\", \"Hawke’s Bay\"],\n    [\"Manawatu-Wanganui\", \"Manawatu-Wanganui\"],\n    [\"Marlborough\", \"Marlborough\"],\n    [\"Nelson\", \"Nelson\"],\n    [\"Northland\", \"Northland\"],\n    [\"Otago\", \"Otago\"],\n    [\"Southland\", \"Southland\"],\n    [\"Taranaki\", \"Taranaki\"],\n    [\"Tasman\", \"Tasman\"],\n    [\"Waikato\", \"Waikato\"],\n    [\"Wellington\", \"Wellington\"],\n    [\"West Coast\", \"West Coast\"],\n  ],\n  Nigeria: [\n    [\"Abia\", \"Abia\"],\n    [\"Abuja Federal Capital Territory\", \"Federal Capital Territory\"],\n    [\"Adamawa\", \"Adamawa\"],\n    [\"Akwa Ibom\", \"Akwa Ibom\"],\n    [\"Anambra\", \"Anambra\"],\n    [\"Bauchi\", \"Bauchi\"],\n    [\"Bayelsa\", \"Bayelsa\"],\n    [\"Benue\", \"Benue\"],\n    [\"Borno\", \"Borno\"],\n    [\"Cross River\", \"Cross River\"],\n    [\"Delta\", \"Delta\"],\n    [\"Ebonyi\", \"Ebonyi\"],\n    [\"Edo\", \"Edo\"],\n    [\"Ekiti\", \"Ekiti\"],\n    [\"Enugu\", \"Enugu\"],\n    [\"Gombe\", \"Gombe\"],\n    [\"Imo\", \"Imo\"],\n    [\"Jigawa\", \"Jigawa\"],\n    [\"Kaduna\", \"Kaduna\"],\n    [\"Kano\", \"Kano\"],\n    [\"Katsina\", \"Katsina\"],\n    [\"Kebbi\", \"Kebbi\"],\n    [\"Kogi\", \"Kogi\"],\n    [\"Kwara\", \"Kwara\"],\n    [\"Lagos\", \"Lagos\"],\n    [\"Nasarawa\", \"Nasarawa\"],\n    [\"Niger\", \"Niger\"],\n    [\"Ogun\", \"Ogun\"],\n    [\"Ondo\", \"Ondo\"],\n    [\"Osun\", \"Osun\"],\n    [\"Oyo\", \"Oyo\"],\n    [\"Plateau\", \"Plateau\"],\n    [\"Rivers\", \"Rivers\"],\n    [\"Sokoto\", \"Sokoto\"],\n    [\"Taraba\", \"Taraba\"],\n    [\"Yobe\", \"Yobe\"],\n    [\"Zamfara\", \"Zamfara\"],\n  ],\n  Panama: [\n    [\"Bocas del Toro\", \"Bocas del Toro\"],\n    [\"Chiriquí\", \"Chiriquí\"],\n    [\"Coclé\", \"Coclé\"],\n    [\"Colón\", \"Colón\"],\n    [\"Darién\", \"Darién\"],\n    [\"Emberá\", \"Emberá\"],\n    [\"Herrera\", \"Herrera\"],\n    [\"Kuna Yala\", \"Guna Yala\"],\n    [\"Los Santos\", \"Los Santos\"],\n    [\"Ngöbe-Buglé\", \"Ngöbe-Buglé\"],\n    [\"Panamá\", \"Panamá\"],\n    [\"Panamá Oeste\", \"West Panamá\"],\n    [\"Veraguas\", \"Veraguas\"],\n  ],\n  Peru: [\n    [\"Amazonas\", \"Amazonas\"],\n    [\"Apurímac\", \"Apurímac\"],\n    [\"Arequipa\", \"Arequipa\"],\n    [\"Ayacucho\", \"Ayacucho\"],\n    [\"Cajamarca\", \"Cajamarca\"],\n    [\"Callao\", \"El Callao\"],\n    [\"Cuzco\", \"Cusco\"],\n    [\"Huancavelica\", \"Huancavelica\"],\n    [\"Huánuco\", \"Huánuco\"],\n    [\"Ica\", \"Ica\"],\n    [\"Junín\", \"Junín\"],\n    [\"La Libertad\", \"La Libertad\"],\n    [\"Lambayeque\", \"Lambayeque\"],\n    [\"Lima (departamento)\", \"Lima Region\"],\n    [\"Lima (provincia)\", \"Lima\"],\n    [\"Loreto\", \"Loreto\"],\n    [\"Madre de Dios\", \"Madre de Dios\"],\n    [\"Moquegua\", \"Moquegua\"],\n    [\"Pasco\", \"Pasco\"],\n    [\"Piura\", \"Piura\"],\n    [\"Puno\", \"Puno\"],\n    [\"San Martín\", \"San Martín\"],\n    [\"Tacna\", \"Tacna\"],\n    [\"Tumbes\", \"Tumbes\"],\n    [\"Ucayali\", \"Ucayali\"],\n    [\"Áncash\", \"Ancash\"],\n  ],\n  Phillipines: [\n    [\"Abra\", \"Abra\"],\n    [\"Agusan del Norte\", \"Agusan del Norte\"],\n    [\"Agusan del Sur\", \"Agusan del Sur\"],\n    [\"Aklan\", \"Aklan\"],\n    [\"Albay\", \"Albay\"],\n    [\"Antique\", \"Antique\"],\n    [\"Apayao\", \"Apayao\"],\n    [\"Aurora\", \"Aurora\"],\n    [\"Basilan\", \"Basilan\"],\n    [\"Bataan\", \"Bataan\"],\n    [\"Batanes\", \"Batanes\"],\n    [\"Batangas\", \"Batangas\"],\n    [\"Benguet\", \"Benguet\"],\n    [\"Biliran\", \"Biliran\"],\n    [\"Bohol\", \"Bohol\"],\n    [\"Bukidnon\", \"Bukidnon\"],\n    [\"Bulacan\", \"Bulacan\"],\n    [\"Cagayan\", \"Cagayan\"],\n    [\"Camarines Norte\", \"Camarines Norte\"],\n    [\"Camarines Sur\", \"Camarines Sur\"],\n    [\"Camiguin\", \"Camiguin\"],\n    [\"Capiz\", \"Capiz\"],\n    [\"Catanduanes\", \"Catanduanes\"],\n    [\"Cavite\", \"Cavite\"],\n    [\"Cebu\", \"Cebu\"],\n    [\"Cotabato\", \"Cotabato\"],\n    [\"Davao Occidental\", \"Davao Occidental\"],\n    [\"Davao Oriental\", \"Davao Oriental\"],\n    [\"Davao de Oro\", \"Compostela Valley\"],\n    [\"Davao del Norte\", \"Davao del Norte\"],\n    [\"Davao del Sur\", \"Davao del Sur\"],\n    [\"Dinagat Islands\", \"Dinagat Islands\"],\n    [\"Eastern Samar\", \"Eastern Samar\"],\n    [\"Guimaras\", \"Guimaras\"],\n    [\"Ifugao\", \"Ifugao\"],\n    [\"Ilocos Norte\", \"Ilocos Norte\"],\n    [\"Ilocos Sur\", \"Ilocos Sur\"],\n    [\"Iloilo\", \"Iloilo\"],\n    [\"Isabela\", \"Isabela\"],\n    [\"Kalinga\", \"Kalinga\"],\n    [\"La Union\", \"La Union\"],\n    [\"Laguna\", \"Laguna\"],\n    [\"Lanao del Norte\", \"Lanao del Norte\"],\n    [\"Lanao del Sur\", \"Lanao del Sur\"],\n    [\"Leyte\", \"Leyte\"],\n    [\"Maguindanao\", \"Maguindanao\"],\n    [\"Marinduque\", \"Marinduque\"],\n    [\"Masbate\", \"Masbate\"],\n    [\"Metro Manila\", \"Metro Manila\"],\n    [\"Misamis Occidental\", \"Misamis Occidental\"],\n    [\"Misamis Oriental\", \"Misamis Oriental\"],\n    [\"Mountain Province\", \"Mountain\"],\n    [\"Negros Occidental\", \"Negros Occidental\"],\n    [\"Negros Oriental\", \"Negros Oriental\"],\n    [\"Northern Samar\", \"Northern Samar\"],\n    [\"Nueva Ecija\", \"Nueva Ecija\"],\n    [\"Nueva Vizcaya\", \"Nueva Vizcaya\"],\n    [\"Occidental Mindoro\", \"Occidental Mindoro\"],\n    [\"Oriental Mindoro\", \"Oriental Mindoro\"],\n    [\"Palawan\", \"Palawan\"],\n    [\"Pampanga\", \"Pampanga\"],\n    [\"Pangasinan\", \"Pangasinan\"],\n    [\"Quezon\", \"Quezon\"],\n    [\"Quirino\", \"Quirino\"],\n    [\"Rizal\", \"Rizal\"],\n    [\"Romblon\", \"Romblon\"],\n    [\"Samar\", \"Samar\"],\n    [\"Sarangani\", \"Sarangani\"],\n    [\"Siquijor\", \"Siquijor\"],\n    [\"Sorsogon\", \"Sorsogon\"],\n    [\"South Cotabato\", \"South Cotabato\"],\n    [\"Southern Leyte\", \"Southern Leyte\"],\n    [\"Sultan Kudarat\", \"Sultan Kudarat\"],\n    [\"Sulu\", \"Sulu\"],\n    [\"Surigao del Norte\", \"Surigao del Norte\"],\n    [\"Surigao del Sur\", \"Surigao del Sur\"],\n    [\"Tarlac\", \"Tarlac\"],\n    [\"Tawi-Tawi\", \"Tawi-Tawi\"],\n    [\"Zambales\", \"Zambales\"],\n    [\"Zamboanga Sibugay\", \"Zamboanga Sibugay\"],\n    [\"Zamboanga del Norte\", \"Zamboanga del Norte\"],\n    [\"Zamboanga del Sur\", \"Zamboanga del Sur\"],\n  ],\n  Portugal: [\n    [\"Aveiro\", \"Aveiro\"],\n    [\"Açores\", \"Azores\"],\n    [\"Beja\", \"Beja\"],\n    [\"Braga\", \"Braga\"],\n    [\"Bragança\", \"Bragança\"],\n    [\"Castelo Branco\", \"Castelo Branco\"],\n    [\"Coimbra\", \"Coimbra\"],\n    [\"Faro\", \"Faro\"],\n    [\"Guarda\", \"Guarda\"],\n    [\"Leiria\", \"Leiria\"],\n    [\"Lisboa\", \"Lisbon\"],\n    [\"Madeira\", \"Madeira\"],\n    [\"Portalegre\", \"Portalegre\"],\n    [\"Porto\", \"Porto\"],\n    [\"Santarém\", \"Santarém\"],\n    [\"Setúbal\", \"Setúbal\"],\n    [\"Viana do Castelo\", \"Viana do Castelo\"],\n    [\"Vila Real\", \"Vila Real\"],\n    [\"Viseu\", \"Viseu\"],\n    [\"Évora\", \"Évora\"],\n  ],\n  Romania: [\n    [\"Alba\", \"Alba\"],\n    [\"Arad\", \"Arad\"],\n    [\"Argeș\", \"Argeș\"],\n    [\"Bacău\", \"Bacău\"],\n    [\"Bihor\", \"Bihor\"],\n    [\"Bistrița-Năsăud\", \"Bistriţa-Năsăud\"],\n    [\"Botoșani\", \"Botoşani\"],\n    [\"Brașov\", \"Braşov\"],\n    [\"Brăila\", \"Brăila\"],\n    [\"București\", \"Bucharest\"],\n    [\"Buzău\", \"Buzău\"],\n    [\"Caraș-Severin\", \"Caraș-Severin\"],\n    [\"Cluj\", \"Cluj\"],\n    [\"Constanța\", \"Constanța\"],\n    [\"Covasna\", \"Covasna\"],\n    [\"Călărași\", \"Călărași\"],\n    [\"Dolj\", \"Dolj\"],\n    [\"Dâmbovița\", \"Dâmbovița\"],\n    [\"Galați\", \"Galați\"],\n    [\"Giurgiu\", \"Giurgiu\"],\n    [\"Gorj\", \"Gorj\"],\n    [\"Harghita\", \"Harghita\"],\n    [\"Hunedoara\", \"Hunedoara\"],\n    [\"Ialomița\", \"Ialomița\"],\n    [\"Iași\", \"Iași\"],\n    [\"Ilfov\", \"Ilfov\"],\n    [\"Maramureș\", \"Maramureş\"],\n    [\"Mehedinți\", \"Mehedinți\"],\n    [\"Mureș\", \"Mureş\"],\n    [\"Neamț\", \"Neamţ\"],\n    [\"Olt\", \"Olt\"],\n    [\"Prahova\", \"Prahova\"],\n    [\"Satu Mare\", \"Satu Mare\"],\n    [\"Sibiu\", \"Sibiu\"],\n    [\"Suceava\", \"Suceava\"],\n    [\"Sălaj\", \"Sălaj\"],\n    [\"Teleorman\", \"Teleorman\"],\n    [\"Timiș\", \"Timiș\"],\n    [\"Tulcea\", \"Tulcea\"],\n    [\"Vaslui\", \"Vaslui\"],\n    [\"Vrancea\", \"Vrancea\"],\n    [\"Vâlcea\", \"Vâlcea\"],\n  ],\n  Russia: [\n    [\"Altai Krai\", \"Altai Krai\"],\n    [\"Altai Republic\", \"Altai\"],\n    [\"Amur Oblast\", \"Amur\"],\n    [\"Arkhangelsk Oblast\", \"Arkhangelsk\"],\n    [\"Astrakhan Oblast\", \"Astrakhan\"],\n    [\"Belgorod Oblast\", \"Belgorod\"],\n    [\"Bryansk Oblast\", \"Bryansk\"],\n    [\"Chechen Republic\", \"Chechen\"],\n    [\"Chelyabinsk Oblast\", \"Chelyabinsk\"],\n    [\"Chukotka Autonomous Okrug\", \"Chukotka Okrug\"],\n    [\"Chuvash Republic\", \"Chuvash\"],\n    [\"Irkutsk Oblast\", \"Irkutsk\"],\n    [\"Ivanovo Oblast\", \"Ivanovo\"],\n    [\"Jewish Autonomous Oblast\", \"Jewish\"],\n    [\"Kabardino-Balkarian Republic\", \"Kabardino-Balkar\"],\n    [\"Kaliningrad Oblast\", \"Kaliningrad\"],\n    [\"Kaluga Oblast\", \"Kaluga\"],\n    [\"Kamchatka Krai\", \"Kamchatka Krai\"],\n    [\"Karachay–Cherkess Republic\", \"Karachay-Cherkess\"],\n    [\"Kemerovo Oblast\", \"Kemerovo\"],\n    [\"Khabarovsk Krai\", \"Khabarovsk Krai\"],\n    [\"Khanty-Mansi Autonomous Okrug\", \"Khanty-Mansi\"],\n    [\"Kirov Oblast\", \"Kirov\"],\n    [\"Komi Republic\", \"Komi\"],\n    [\"Kostroma Oblast\", \"Kostroma\"],\n    [\"Krasnodar Krai\", \"Krasnodar Krai\"],\n    [\"Krasnoyarsk Krai\", \"Krasnoyarsk Krai\"],\n    [\"Kurgan Oblast\", \"Kurgan\"],\n    [\"Kursk Oblast\", \"Kursk\"],\n    [\"Leningrad Oblast\", \"Leningrad\"],\n    [\"Lipetsk Oblast\", \"Lipetsk\"],\n    [\"Magadan Oblast\", \"Magadan\"],\n    [\"Mari El Republic\", \"Mari El\"],\n    [\"Moscow\", \"Moscow\"],\n    [\"Moscow Oblast\", \"Moscow Province\"],\n    [\"Murmansk Oblast\", \"Murmansk\"],\n    [\"Nizhny Novgorod Oblast\", \"Nizhny Novgorod\"],\n    [\"Novgorod Oblast\", \"Novgorod\"],\n    [\"Novosibirsk Oblast\", \"Novosibirsk\"],\n    [\"Omsk Oblast\", \"Omsk\"],\n    [\"Orenburg Oblast\", \"Orenburg\"],\n    [\"Oryol Oblast\", \"Oryol\"],\n    [\"Penza Oblast\", \"Penza\"],\n    [\"Perm Krai\", \"Perm Krai\"],\n    [\"Primorsky Krai\", \"Primorsky Krai\"],\n    [\"Pskov Oblast\", \"Pskov\"],\n    [\"Republic of Adygeya\", \"Adygea\"],\n    [\"Republic of Bashkortostan\", \"Bashkortostan\"],\n    [\"Republic of Buryatia\", \"Buryat\"],\n    [\"Republic of Dagestan\", \"Dagestan\"],\n    [\"Republic of Ingushetia\", \"Ingushetia\"],\n    [\"Republic of Kalmykia\", \"Kalmykia\"],\n    [\"Republic of Karelia\", \"Karelia\"],\n    [\"Republic of Khakassia\", \"Khakassia\"],\n    [\"Republic of Mordovia\", \"Mordovia\"],\n    [\"Republic of North Ossetia–Alania\", \"North Ossetia-Alania\"],\n    [\"Republic of Tatarstan\", \"Tatarstan\"],\n    [\"Rostov Oblast\", \"Rostov\"],\n    [\"Ryazan Oblast\", \"Ryazan\"],\n    [\"Saint Petersburg\", \"Saint Petersburg\"],\n    [\"Sakha Republic (Yakutia)\", \"Sakha\"],\n    [\"Sakhalin Oblast\", \"Sakhalin\"],\n    [\"Samara Oblast\", \"Samara\"],\n    [\"Saratov Oblast\", \"Saratov\"],\n    [\"Smolensk Oblast\", \"Smolensk\"],\n    [\"Stavropol Krai\", \"Stavropol Krai\"],\n    [\"Sverdlovsk Oblast\", \"Sverdlovsk\"],\n    [\"Tambov Oblast\", \"Tambov\"],\n    [\"Tomsk Oblast\", \"Tomsk\"],\n    [\"Tula Oblast\", \"Tula\"],\n    [\"Tver Oblast\", \"Tver\"],\n    [\"Tyumen Oblast\", \"Tyumen\"],\n    [\"Tyva Republic\", \"Tuva\"],\n    [\"Udmurtia\", \"Udmurt\"],\n    [\"Ulyanovsk Oblast\", \"Ulyanovsk\"],\n    [\"Vladimir Oblast\", \"Vladimir\"],\n    [\"Volgograd Oblast\", \"Volgograd\"],\n    [\"Vologda Oblast\", \"Vologda\"],\n    [\"Voronezh Oblast\", \"Voronezh\"],\n    [\"Yamalo-Nenets Autonomous Okrug\", \"Yamalo-Nenets Okrug\"],\n    [\"Yaroslavl Oblast\", \"Yaroslavl\"],\n    [\"Zabaykalsky Krai\", \"Zabaykalsky Krai\"],\n  ],\n  \"South Africa\": [\n    [\"Eastern Cape\", \"Eastern Cape\"],\n    [\"Free State\", \"Free State\"],\n    [\"Gauteng\", \"Gauteng\"],\n    [\"KwaZulu-Natal\", \"KwaZulu-Natal\"],\n    [\"Limpopo\", \"Limpopo\"],\n    [\"Mpumalanga\", \"Mpumalanga\"],\n    [\"North West\", \"North West\"],\n    [\"Northern Cape\", \"Northern Cape\"],\n    [\"Western Cape\", \"Western Cape\"],\n  ],\n  \"South Korea\": [\n    [\"Busan\", \"Busan\"],\n    [\"Chungbuk\", \"North Chungcheong\"],\n    [\"Chungnam\", \"South Chungcheong\"],\n    [\"Daegu\", \"Daegu\"],\n    [\"Daejeon\", \"Daejeon\"],\n    [\"Gangwon\", \"Gangwon\"],\n    [\"Gwangju\", \"Gwangju City\"],\n    [\"Gyeongbuk\", \"North Gyeongsang\"],\n    [\"Gyeonggi\", \"Gyeonggi\"],\n    [\"Gyeongnam\", \"South Gyeongsang\"],\n    [\"Incheon\", \"Incheon\"],\n    [\"Jeju\", \"Jeju\"],\n    [\"Jeonbuk\", \"North Jeolla\"],\n    [\"Jeonnam\", \"South Jeolla\"],\n    [\"Sejong\", \"Sejong\"],\n    [\"Seoul\", \"Seoul\"],\n    [\"Ulsan\", \"Ulsan\"],\n  ],\n  Spain: [\n    [\"A Coruña\", \"A Coruña\"],\n    [\"Albacete\", \"Albacete\"],\n    [\"Alicante\", \"Alicante\"],\n    [\"Almería\", \"Almería\"],\n    [\"Asturias\", \"Asturias Province\"],\n    [\"Badajoz\", \"Badajoz\"],\n    [\"Balears\", \"Balears Province\"],\n    [\"Barcelona\", \"Barcelona\"],\n    [\"Burgos\", \"Burgos\"],\n    [\"Cantabria\", \"Cantabria Province\"],\n    [\"Castellón\", \"Castellón\"],\n    [\"Ceuta\", \"Ceuta\"],\n    [\"Ciudad Real\", \"Ciudad Real\"],\n    [\"Cuenca\", \"Cuenca\"],\n    [\"Cáceres\", \"Cáceres\"],\n    [\"Cádiz\", \"Cádiz\"],\n    [\"Córdoba\", \"Córdoba\"],\n    [\"Girona\", \"Girona\"],\n    [\"Granada\", \"Granada\"],\n    [\"Guadalajara\", \"Guadalajara\"],\n    [\"Guipúzcoa\", \"Gipuzkoa\"],\n    [\"Huelva\", \"Huelva\"],\n    [\"Huesca\", \"Huesca\"],\n    [\"Jaén\", \"Jaén\"],\n    [\"La Rioja\", \"La Rioja Province\"],\n    [\"Las Palmas\", \"Las Palmas\"],\n    [\"León\", \"León\"],\n    [\"Lleida\", \"Lleida\"],\n    [\"Lugo\", \"Lugo\"],\n    [\"Madrid\", \"Madrid Province\"],\n    [\"Melilla\", \"Melilla\"],\n    [\"Murcia\", \"Murcia\"],\n    [\"Málaga\", \"Málaga\"],\n    [\"Navarra\", \"Navarra\"],\n    [\"Ourense\", \"Ourense\"],\n    [\"Palencia\", \"Palencia\"],\n    [\"Pontevedra\", \"Pontevedra\"],\n    [\"Salamanca\", \"Salamanca\"],\n    [\"Santa Cruz de Tenerife\", \"Santa Cruz de Tenerife\"],\n    [\"Segovia\", \"Segovia\"],\n    [\"Sevilla\", \"Seville\"],\n    [\"Soria\", \"Soria\"],\n    [\"Tarragona\", \"Tarragona\"],\n    [\"Teruel\", \"Teruel\"],\n    [\"Toledo\", \"Toledo\"],\n    [\"Valencia\", \"Valencia\"],\n    [\"Valladolid\", \"Valladolid\"],\n    [\"Vizcaya\", \"Biscay\"],\n    [\"Zamora\", \"Zamora\"],\n    [\"Zaragoza\", \"Zaragoza\"],\n    [\"Álava\", \"Álava\"],\n    [\"Ávila\", \"Ávila\"],\n  ],\n  Thailand: [\n    [\"Amnat Charoen\", \"Amnat Charoen\"],\n    [\"Ang Thong\", \"Ang Thong\"],\n    [\"Bangkok\", \"Bangkok\"],\n    [\"Bueng Kan\", \"Bueng Kan\"],\n    [\"Buriram\", \"Buri Ram\"],\n    [\"Chachoengsao\", \"Chachoengsao\"],\n    [\"Chai Nat\", \"Chai Nat\"],\n    [\"Chaiyaphum\", \"Chaiyaphum\"],\n    [\"Chanthaburi\", \"Chanthaburi\"],\n    [\"Chiang Mai\", \"Chiang Mai\"],\n    [\"Chiang Rai\", \"Chiang Rai\"],\n    [\"Chon Buri\", \"Chon Buri\"],\n    [\"Chumphon\", \"Chumphon\"],\n    [\"Kalasin\", \"Kalasin\"],\n    [\"Kamphaeng Phet\", \"Kamphaeng Phet\"],\n    [\"Kanchanaburi\", \"Kanchanaburi\"],\n    [\"Khon Kaen\", \"Khon Kaen\"],\n    [\"Krabi\", \"Krabi\"],\n    [\"Lampang\", \"Lampang\"],\n    [\"Lamphun\", \"Lamphun\"],\n    [\"Loei\", \"Loei\"],\n    [\"Lopburi\", \"Lopburi\"],\n    [\"Mae Hong Son\", \"Mae Hong Son\"],\n    [\"Maha Sarakham\", \"Maha Sarakham\"],\n    [\"Mukdahan\", \"Mukdahan\"],\n    [\"Nakhon Nayok\", \"Nakhon Nayok\"],\n    [\"Nakhon Pathom\", \"Nakhon Pathom\"],\n    [\"Nakhon Phanom\", \"Nakhon Phanom\"],\n    [\"Nakhon Ratchasima\", \"Nakhon Ratchasima\"],\n    [\"Nakhon Sawan\", \"Nakhon Sawan\"],\n    [\"Nakhon Si Thammarat\", \"Nakhon Si Thammarat\"],\n    [\"Nan\", \"Nan\"],\n    [\"Narathiwat\", \"Narathiwat\"],\n    [\"Nong Bua Lam Phu\", \"Nong Bua Lam Phu\"],\n    [\"Nong Khai\", \"Nong Khai\"],\n    [\"Nonthaburi\", \"Nonthaburi\"],\n    [\"Pathum Thani\", \"Pathum Thani\"],\n    [\"Pattani\", \"Pattani\"],\n    [\"Pattaya\", \"Pattaya\"],\n    [\"Phangnga\", \"Phang Nga\"],\n    [\"Phatthalung\", \"Phatthalung\"],\n    [\"Phayao\", \"Phayao\"],\n    [\"Phetchabun\", \"Phetchabun\"],\n    [\"Phetchaburi\", \"Phetchaburi\"],\n    [\"Phichit\", \"Phichit\"],\n    [\"Phitsanulok\", \"Phitsanulok\"],\n    [\"Phra Nakhon Si Ayutthaya\", \"Phra Nakhon Si Ayutthaya\"],\n    [\"Phrae\", \"Phrae\"],\n    [\"Phuket\", \"Phuket\"],\n    [\"Prachin Buri\", \"Prachin Buri\"],\n    [\"Prachuap Khiri Khan\", \"Prachuap Khiri Khan\"],\n    [\"Ranong\", \"Ranong\"],\n    [\"Ratchaburi\", \"Ratchaburi\"],\n    [\"Rayong\", \"Rayong\"],\n    [\"Roi Et\", \"Roi Et\"],\n    [\"Sa Kaeo\", \"Sa Kaeo\"],\n    [\"Sakon Nakhon\", \"Sakon Nakhon\"],\n    [\"Samut Prakan\", \"Samut Prakan\"],\n    [\"Samut Sakhon\", \"Samut Sakhon\"],\n    [\"Samut Songkhram\", \"Samut Songkhram\"],\n    [\"Saraburi\", \"Saraburi\"],\n    [\"Satun\", \"Satun\"],\n    [\"Sing Buri\", \"Sing Buri\"],\n    [\"Sisaket\", \"Si Sa Ket\"],\n    [\"Songkhla\", \"Songkhla\"],\n    [\"Sukhothai\", \"Sukhothai\"],\n    [\"Suphan Buri\", \"Suphanburi\"],\n    [\"Surat Thani\", \"Surat Thani\"],\n    [\"Surin\", \"Surin\"],\n    [\"Tak\", \"Tak\"],\n    [\"Trang\", \"Trang\"],\n    [\"Trat\", \"Trat\"],\n    [\"Ubon Ratchathani\", \"Ubon Ratchathani\"],\n    [\"Udon Thani\", \"Udon Thani\"],\n    [\"Uthai Thani\", \"Uthai Thani\"],\n    [\"Uttaradit\", \"Uttaradit\"],\n    [\"Yala\", \"Yala\"],\n    [\"Yasothon\", \"Yasothon\"],\n  ],\n  \"United Arab Emirates\": [\n    [\"Abu Dhabi\", \"Abu Dhabi\"],\n    [\"Ajman\", \"Ajman\"],\n    [\"Dubai\", \"Dubai\"],\n    [\"Fujairah\", \"Fujairah\"],\n    [\"Ras al-Khaimah\", \"Ras al-Khaimah\"],\n    [\"Sharjah\", \"Sharjah\"],\n    [\"Umm al-Quwain\", \"Umm al-Quwain\"],\n  ],\n  \"United Kingdom\": [\n    [\"British Forces\", \"British Forces\"],\n    [\"England\", \"England\"],\n    [\"Northern Ireland\", \"Northern Ireland\"],\n    [\"Scotland\", \"Scotland\"],\n    [\"Wales\", \"Wales\"],\n  ],\n  \"United States\": [\n    [\"Alabama\", \"Alabama\"],\n    [\"Alaska\", \"Alaska\"],\n    [\"American Samoa\", \"American Samoa\"],\n    [\"Arizona\", \"Arizona\"],\n    [\"Arkansas\", \"Arkansas\"],\n    [\"Armed Forces Americas\", \"Armed Forces Americas\"],\n    [\"Armed Forces Europe\", \"Armed Forces Europe\"],\n    [\"Armed Forces Pacific\", \"Armed Forces Pacific\"],\n    [\"California\", \"California\"],\n    [\"Colorado\", \"Colorado\"],\n    [\"Connecticut\", \"Connecticut\"],\n    [\"Delaware\", \"Delaware\"],\n    [\"District of Columbia\", \"Washington DC\"],\n    [\"Federated States of Micronesia\", \"Micronesia\"],\n    [\"Florida\", \"Florida\"],\n    [\"Georgia\", \"Georgia\"],\n    [\"Guam\", \"Guam\"],\n    [\"Hawaii\", \"Hawaii\"],\n    [\"Idaho\", \"Idaho\"],\n    [\"Illinois\", \"Illinois\"],\n    [\"Indiana\", \"Indiana\"],\n    [\"Iowa\", \"Iowa\"],\n    [\"Kansas\", \"Kansas\"],\n    [\"Kentucky\", \"Kentucky\"],\n    [\"Louisiana\", \"Louisiana\"],\n    [\"Maine\", \"Maine\"],\n    [\"Marshall Islands\", \"Marshall Islands\"],\n    [\"Maryland\", \"Maryland\"],\n    [\"Massachusetts\", \"Massachusetts\"],\n    [\"Michigan\", \"Michigan\"],\n    [\"Minnesota\", \"Minnesota\"],\n    [\"Mississippi\", \"Mississippi\"],\n    [\"Missouri\", \"Missouri\"],\n    [\"Montana\", \"Montana\"],\n    [\"Nebraska\", \"Nebraska\"],\n    [\"Nevada\", \"Nevada\"],\n    [\"New Hampshire\", \"New Hampshire\"],\n    [\"New Jersey\", \"New Jersey\"],\n    [\"New Mexico\", \"New Mexico\"],\n    [\"New York\", \"New York\"],\n    [\"North Carolina\", \"North Carolina\"],\n    [\"North Dakota\", \"North Dakota\"],\n    [\"Northern Mariana Islands\", \"Northern Mariana Islands\"],\n    [\"Ohio\", \"Ohio\"],\n    [\"Oklahoma\", \"Oklahoma\"],\n    [\"Oregon\", \"Oregon\"],\n    [\"Palau\", \"Palau\"],\n    [\"Pennsylvania\", \"Pennsylvania\"],\n    [\"Puerto Rico\", \"Puerto Rico\"],\n    [\"Rhode Island\", \"Rhode Island\"],\n    [\"South Carolina\", \"South Carolina\"],\n    [\"South Dakota\", \"South Dakota\"],\n    [\"Tennessee\", \"Tennessee\"],\n    [\"Texas\", \"Texas\"],\n    [\"Utah\", \"Utah\"],\n    [\"Vermont\", \"Vermont\"],\n    [\"Virgin Islands\", \"U.S. Virgin Islands\"],\n    [\"Virginia\", \"Virginia\"],\n    [\"Washington\", \"Washington\"],\n    [\"West Virginia\", \"West Virginia\"],\n    [\"Wisconsin\", \"Wisconsin\"],\n    [\"Wyoming\", \"Wyoming\"],\n  ],\n}\n\nexport default countries\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Snackbar = styled.div`\n  min-width: 250px; /* Set a default minimum width */\n  margin-left: -125px; /* Divide value of min-width by 2 */\n  background-color: #333; /* Black background color */\n  color: #fff; /* White text color */\n  text-align: center; /* Centered text */\n  border-radius: 2px; /* Rounded borders */\n  padding: 16px; /* Padding */\n  position: fixed; /* Sit on top of the screen */\n  z-index: 1; /* Add a z-index if needed */\n  left: 50%; /* Center the snackbar */\n  bottom: 200px; /* 50px from the bottom */\n  &.toast-error {\n    background: #802a19;\n  }\n`\n\ninterface Props {\n  show: boolean\n  isError: boolean\n  toastMsg: string\n}\n\nconst Toast = ({ show, isError, toastMsg }: Props) => {\n  if (show) {\n    return (\n      <Snackbar className={isError ? \"toast-error\" : \"toast\"}>\n        {toastMsg}\n      </Snackbar>\n    )\n  } else {\n    return <div />\n  }\n}\n\nexport default Toast\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst IconSpinner = styled.svg`\n  -moz-animation: spin 500ms infinite linear;\n  -o-animation: spin 500ms infinite linear;\n  -webkit-animation: spin 500ms infinite linear;\n  animation: spin 500ms infinite linear;\n`\n\nconst Spinner = () => (\n  <IconSpinner\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    role=\"presentation\"\n    className=\"icon icon-spinner\"\n    viewBox=\"0 0 20 20\"\n  >\n    <path\n      d=\"M7.229 1.173a9.25 9.25 0 1 0 11.655 11.412 1.25 1.25 0 1 0-2.4-.698 6.75 6.75 0 1 1-8.506-8.329 1.25 1.25 0 1 0-.75-2.385z\"\n      fill=\"#919EAB\"\n    />\n  </IconSpinner>\n)\n\nexport default Spinner\n","import React, { useState, useEffect, createRef } from \"react\"\nimport styled from \"styled-components\"\nimport { Subscription } from \"../types/subscription\"\nimport countries from \"../data/countries\"\nimport { formatSubscriptionId, accountRedirect } from \"../utils\"\nimport Toast from \"./Toast\"\nimport Spinner from \"./Spinner\"\n\nconst Container = styled.div`\n  input,\n  select {\n    width: 100%;\n  }\n  .input-field {\n    margin: 1em 0;\n  }\n`\n\nconst GridTwoColumn = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1em;\n  @media only screen and (max-width: 468px) {\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 0;\n  }\n`\n\nconst GridThreeColumn = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1em;\n  @media only screen and (max-width: 468px) {\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 0;\n  }\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(2, 1fr);\n  margin-top: 2em;\n  padding: 1em;\n  button {\n    border-radius: 8px;\n    border: 1px solid #000;\n    font-size: 14px;\n    padding: 15px 10px;\n    line-height: 1;\n    text-align: center;\n  }\n  .yellow-btn {\n    color: #000;\n    background-color: var(--yellow);\n  }\n  .yellow-btn:hover {\n    color: #000;\n    background-color: var(--yellow-focus);\n  }\n  .red-btn {\n    color: #fff;\n    background-color: var(--red);\n  }\n  .red-btn:hover {\n    color: #fff;\n    background-color: var(--red-focus);\n  }\n`\n\ninterface Props {\n  shop: string\n  customerId: string\n  token: string\n  subscription: Subscription\n  setOpen: (value: React.SetStateAction<boolean>) => void\n  getSubscriptions: (\n    shop: string,\n    token: string,\n    customerId: string\n  ) => Promise<void>\n}\n\nconst ShippingAddressForm = (props: Props) => {\n  const {\n    shop,\n    customerId,\n    token,\n    subscription,\n    setOpen,\n    getSubscriptions,\n  } = props\n  const Countries: { [key: string]: string[][] } = countries\n  const [provinces, setProvinces] = useState<string[][]>()\n  // data\n  const { address } = subscription.deliveryMethod\n  const [company, setCompany] = useState<string>(address.company)\n  const [address1, setAddress1] = useState<string>(address.address1)\n  const [address2, setAddress2] = useState<string>(address.address2)\n  const [city, setCity] = useState<string>(address.city)\n  const [province, setProvince] = useState<string>(address.province)\n  const [country, setCountry] = useState<string>(address.country)\n  const [zip, setZip] = useState<string>(address.zip)\n  const [firstName, setFirstName] = useState<string>(address.firstName)\n  const [lastName, setLastName] = useState<string>(address.lastName)\n  const [phone, setPhone] = useState<string>(address.phone)\n  // toast\n  const [showToast, setShowToast] = useState<boolean>(false)\n  const [isToastError, setIsToastError] = useState<boolean>(false)\n  const [toastMsg, setToastMsg] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (Countries[country]) {\n      setProvinces(Countries[country])\n    }\n  }, [])\n\n  const handleCountryChange = (event: { target: { value: string } }) => {\n    const c = event.target.value\n    setCountry(c)\n    if (Countries[c]) {\n      setProvinces(Countries[c])\n    } else {\n      setProvinces([])\n    }\n  }\n\n  const handleProvinceChange = (event: { target: { value: string } }) => {\n    const province = event.target.value\n    setProvince(province)\n  }\n\n  const handleFirstNameChange = (event: { target: { value: string } }) => {\n    const fn = event.target.value\n    setFirstName(fn)\n  }\n\n  const handleLastNameChange = (event: { target: { value: string } }) => {\n    const ln = event.target.value\n    setLastName(ln)\n  }\n\n  const handleCompanyChange = (event: { target: { value: string } }) => {\n    const company = event.target.value\n    setCompany(company)\n  }\n\n  const handleAddress1Change = (event: { target: { value: string } }) => {\n    const addr1 = event.target.value\n    setAddress1(addr1)\n  }\n\n  const handleAddress2Change = (event: { target: { value: string } }) => {\n    const addr2 = event.target.value\n    setAddress2(addr2)\n  }\n\n  const handleCityChange = (event: { target: { value: string } }) => {\n    const city = event.target.value\n    setCity(city)\n  }\n\n  const handleZipChange = (event: { target: { value: string } }) => {\n    const zip = event.target.value\n    setZip(zip)\n  }\n\n  const handlePhoneChange = (event: { target: { value: string } }) => {\n    const phone = event.target.value\n    setPhone(phone)\n  }\n\n  const handleHideToast = () => {\n    setTimeout(() => {\n      setIsToastError(false)\n      setToastMsg(\"\")\n      setShowToast(false)\n    }, 3000)\n  }\n\n  const form = createRef<HTMLFormElement>()\n\n  const validate = () => form?.current?.reportValidity()\n\n  const updateShippingAddress = async () => {\n    if (validate()) {\n      setLoading(true)\n      try {\n        const response = await fetch(`/apps/app_proxy/subscription/address`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            token,\n            customerId,\n            subscriptionContractId: subscription.id,\n            address1,\n            address2,\n            city,\n            province,\n            country,\n            zip,\n            firstName,\n            lastName,\n            company,\n            phone,\n          }),\n        })\n        const data = await response.json()\n        if (data.errors) {\n          setIsToastError(true)\n          setToastMsg(data.errors[0].message)\n          setShowToast(true)\n          handleHideToast()\n        } else {\n          setIsToastError(false)\n          setToastMsg(\"Update Successful.\")\n          setShowToast(true)\n          handleHideToast()\n          getSubscriptions(shop, token, customerId)\n          setOpen(false)\n        }\n        setLoading(false)\n      } catch (e: any) {\n        console.log(\"ERROR\", e.message)\n        setLoading(false)\n        accountRedirect()\n      }\n    }\n  }\n\n  return (\n    <Container className=\"page-width\">\n      <form acceptCharset=\"UTF-8\" onSubmit={e => e.preventDefault()} ref={form}>\n        <h3>\n          Update Address For Subscription (\n          {formatSubscriptionId(subscription.id)})\n        </h3>\n        <GridTwoColumn>\n          <div className=\"input-field\">\n            <label className=\"active\" htmlFor=\"firstName\">\n              First Name\n            </label>\n            <input\n              className=\"validate\"\n              type=\"text\"\n              id=\"firstName\"\n              name=\"first_name\"\n              value={firstName}\n              onChange={handleFirstNameChange}\n              placeholder=\"First Name\"\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <label className=\"active\" htmlFor=\"lastName\">\n              Last Name\n            </label>\n            <input\n              className=\"validate\"\n              type=\"text\"\n              id=\"lastname\"\n              name=\"last_name\"\n              value={lastName}\n              onChange={handleLastNameChange}\n              placeholder=\"Last Name\"\n            />\n          </div>\n        </GridTwoColumn>\n\n        <div className=\"input-field\">\n          <label className=\"active\" htmlFor=\"company\">\n            Company\n          </label>\n          <input\n            className=\"validate\"\n            type=\"text\"\n            id=\"company\"\n            name=\"company\"\n            value={company}\n            onChange={handleCompanyChange}\n            placeholder=\"Company\"\n          />\n        </div>\n\n        <div className=\"input-field\">\n          <label className=\"active\" htmlFor=\"address1\">\n            Address\n          </label>\n          <input\n            className=\"validate\"\n            type=\"text\"\n            id=\"address1\"\n            name=\"address1\"\n            value={address1}\n            onChange={handleAddress1Change}\n            placeholder=\"Address 1\"\n          />\n        </div>\n\n        <div className=\"input-field\">\n          <label className=\"active\" htmlFor=\"address2\">\n            Apartment, suite, etc.\n          </label>\n          <input\n            className=\"validate\"\n            type=\"text\"\n            id=\"address2\"\n            name=\"address2\"\n            value={address2}\n            onChange={handleAddress2Change}\n            placeholder=\"Address 2\"\n          />\n        </div>\n\n        <div className=\"input-field\">\n          <label className=\"active\" htmlFor=\"city\">\n            City\n          </label>\n          <input\n            className=\"validate\"\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            value={city}\n            onChange={handleCityChange}\n            placeholder=\"City\"\n          />\n        </div>\n\n        <GridThreeColumn>\n          <div id=\"provinceContainer\" className=\"input-field\">\n            <label className=\"active\" htmlFor=\"province\">\n              Province\n            </label>\n            <select\n              id=\"province\"\n              name=\"province\"\n              value={province}\n              onChange={handleProvinceChange}\n            >\n              {provinces &&\n                provinces.map((province: string[]) => (\n                  <option key={province[0]} value={province[0]}>\n                    {province[1]}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n          <div className=\"input-field\">\n            <label className=\"active\" htmlFor=\"Country\">\n              Country/Region\n            </label>\n            <select\n              id=\"country\"\n              className=\"address-country-option\"\n              name=\"country\"\n              value={country}\n              onChange={handleCountryChange}\n            >\n              <option value=\"---\">---</option>\n              <option value=\"Afghanistan\">Afghanistan</option>\n              <option value=\"Aland Islands\">Åland Islands</option>\n              <option value=\"Albania\">Albania</option>\n              <option value=\"Algeria\">Algeria</option>\n              <option value=\"Andorra\">Andorra</option>\n              <option value=\"Angola\">Angola</option>\n              <option value=\"Anguilla\">Anguilla</option>\n              <option value=\"Antigua And Barbuda\">Antigua &amp; Barbuda</option>\n              <option value=\"Argentina\">Argentina</option>\n              <option value=\"Armenia\">Armenia</option>\n              <option value=\"Aruba\">Aruba</option>\n              <option value=\"Ascension Island\">Ascension Island</option>\n              <option value=\"Australia\">Australia</option>\n              <option value=\"Austria\">Austria</option>\n              <option value=\"Azerbaijan\">Azerbaijan</option>\n              <option value=\"Bahamas\">Bahamas</option>\n              <option value=\"Bahrain\">Bahrain</option>\n              <option value=\"Bangladesh\">Bangladesh</option>\n              <option value=\"Barbados\">Barbados</option>\n              <option value=\"Belarus\">Belarus</option>\n              <option value=\"Belgium\">Belgium</option>\n              <option value=\"Belize\">Belize</option>\n              <option value=\"Benin\">Benin</option>\n              <option value=\"Bermuda\">Bermuda</option>\n              <option value=\"Bhutan\">Bhutan</option>\n              <option value=\"Bolivia\">Bolivia</option>\n              <option value=\"Bosnia And Herzegovina\">\n                Bosnia &amp; Herzegovina\n              </option>\n              <option value=\"Botswana\">Botswana</option>\n              <option value=\"Brazil\">Brazil</option>\n              <option value=\"British Indian Ocean Territory\">\n                British Indian Ocean Territory\n              </option>\n              <option value=\"Virgin Islands, British\">\n                British Virgin Islands\n              </option>\n              <option value=\"Brunei\">Brunei</option>\n              <option value=\"Bulgaria\">Bulgaria</option>\n              <option value=\"Burkina Faso\">Burkina Faso</option>\n              <option value=\"Burundi\">Burundi</option>\n              <option value=\"Cambodia\">Cambodia</option>\n              <option value=\"Republic of Cameroon\">Cameroon</option>\n              <option value=\"Canada\">Canada</option>\n              <option value=\"Cape Verde\">Cape Verde</option>\n              <option value=\"Caribbean Netherlands\">\n                Caribbean Netherlands\n              </option>\n              <option value=\"Cayman Islands\">Cayman Islands</option>\n              <option value=\"Central African Republic\">\n                Central African Republic\n              </option>\n              <option value=\"Chad\">Chad</option>\n              <option value=\"Chile\">Chile</option>\n              <option value=\"China\">China</option>\n              <option value=\"Christmas Island\">Christmas Island</option>\n              <option value=\"Cocos (Keeling) Islands\">\n                Cocos (Keeling) Islands\n              </option>\n              <option value=\"Colombia\">Colombia</option>\n              <option value=\"Comoros\">Comoros</option>\n              <option value=\"Congo\">Congo - Brazzaville</option>\n              <option value=\"Congo, The Democratic Republic Of The\">\n                Congo - Kinshasa\n              </option>\n              <option value=\"Cook Islands\">Cook Islands</option>\n              <option value=\"Costa Rica\">Costa Rica</option>\n              <option value=\"Croatia\">Croatia</option>\n              <option value=\"Curaçao\">Curaçao</option>\n              <option value=\"Cyprus\">Cyprus</option>\n              <option value=\"Czech Republic\">Czechia</option>\n              <option value=\"Côte d'Ivoire\">Côte d’Ivoire</option>\n              <option value=\"Denmark\">Denmark</option>\n              <option value=\"Djibouti\">Djibouti</option>\n              <option value=\"Dominica\">Dominica</option>\n              <option value=\"Dominican Republic\">Dominican Republic</option>\n              <option value=\"Ecuador\">Ecuador</option>\n              <option value=\"Egypt\" data-provinces=\"[\">\n                Egypt\n              </option>\n              <option value=\"El Salvador\">El Salvador</option>\n              <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n              <option value=\"Eritrea\">Eritrea</option>\n              <option value=\"Estonia\">Estonia</option>\n              <option value=\"Eswatini\">Eswatini</option>\n              <option value=\"Ethiopia\">Ethiopia</option>\n              <option value=\"Falkland Islands (Malvinas)\">\n                Falkland Islands\n              </option>\n              <option value=\"Faroe Islands\">Faroe Islands</option>\n              <option value=\"Fiji\">Fiji</option>\n              <option value=\"Finland\">Finland</option>\n              <option value=\"France\">France</option>\n              <option value=\"French Guiana\">French Guiana</option>\n              <option value=\"French Polynesia\">French Polynesia</option>\n              <option value=\"French Southern Territories\">\n                French Southern Territories\n              </option>\n              <option value=\"Gabon\">Gabon</option>\n              <option value=\"Gambia\">Gambia</option>\n              <option value=\"Georgia\">Georgia</option>\n              <option value=\"Germany\">Germany</option>\n              <option value=\"Ghana\">Ghana</option>\n              <option value=\"Gibraltar\">Gibraltar</option>\n              <option value=\"Greece\">Greece</option>\n              <option value=\"Greenland\">Greenland</option>\n              <option value=\"Grenada\">Grenada</option>\n              <option value=\"Guadeloupe\">Guadeloupe</option>\n              <option value=\"Guatemala\">Guatemala</option>\n              <option value=\"Guernsey\">Guernsey</option>\n              <option value=\"Guinea\">Guinea</option>\n              <option value=\"Guinea Bissau\">Guinea-Bissau</option>\n              <option value=\"Guyana\">Guyana</option>\n              <option value=\"Haiti\">Haiti</option>\n              <option value=\"Honduras\">Honduras</option>\n              <option value=\"Hong Kong\">Hong Kong SAR</option>\n              <option value=\"Hungary\">Hungary</option>\n              <option value=\"Iceland\">Iceland</option>\n              <option value=\"India\">India</option>\n              <option value=\"Indonesia\">Indonesia</option>\n              <option value=\"Iraq\">Iraq</option>\n              <option value=\"Ireland\">Ireland</option>\n              <option value=\"Isle Of Man\">Isle of Man</option>\n              <option value=\"Israel\">Israel</option>\n              <option value=\"Italy\">Italy</option>\n              <option value=\"Jamaica\">Jamaica</option>\n              <option value=\"Japan\">Japan</option>\n              <option value=\"Jersey\">Jersey</option>\n              <option value=\"Jordan\">Jordan</option>\n              <option value=\"Kazakhstan\">Kazakhstan</option>\n              <option value=\"Kenya\">Kenya</option>\n              <option value=\"Kiribati\">Kiribati</option>\n              <option value=\"Kosovo\">Kosovo</option>\n              <option value=\"Kuwait\">Kuwait</option>\n              <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n              <option value=\"Lao People's Democratic Republic\">Laos</option>\n              <option value=\"Latvia\">Latvia</option>\n              <option value=\"Lebanon\">Lebanon</option>\n              <option value=\"Lesotho\">Lesotho</option>\n              <option value=\"Liberia\">Liberia</option>\n              <option value=\"Libyan Arab Jamahiriya\">Libya</option>\n              <option value=\"Liechtenstein\">Liechtenstein</option>\n              <option value=\"Lithuania\">Lithuania</option>\n              <option value=\"Luxembourg\">Luxembourg</option>\n              <option value=\"Macao\">Macao SAR</option>\n              <option value=\"Madagascar\">Madagascar</option>\n              <option value=\"Malawi\">Malawi</option>\n              <option value=\"Malaysia\">Malaysia</option>\n              <option value=\"Maldives\">Maldives</option>\n              <option value=\"Mali\">Mali</option>\n              <option value=\"Malta\">Malta</option>\n              <option value=\"Martinique\">Martinique</option>\n              <option value=\"Mauritania\">Mauritania</option>\n              <option value=\"Mauritius\">Mauritius</option>\n              <option value=\"Mayotte\">Mayotte</option>\n              <option value=\"Mexico\">Mexico</option>\n              <option value=\"Moldova, Republic of\">Moldova</option>\n              <option value=\"Monaco\">Monaco</option>\n              <option value=\"Mongolia\">Mongolia</option>\n              <option value=\"Montenegro\">Montenegro</option>\n              <option value=\"Montserrat\">Montserrat</option>\n              <option value=\"Morocco\">Morocco</option>\n              <option value=\"Mozambique\">Mozambique</option>\n              <option value=\"Myanmar\">Myanmar (Burma)</option>\n              <option value=\"Namibia\">Namibia</option>\n              <option value=\"Nauru\">Nauru</option>\n              <option value=\"Nepal\">Nepal</option>\n              <option value=\"Netherlands\">Netherlands</option>\n              <option value=\"New Caledonia\">New Caledonia</option>\n              <option value=\"New Zealand\">New Zealand</option>\n              <option value=\"Nicaragua\">Nicaragua</option>\n              <option value=\"Niger\">Niger</option>\n              <option value=\"Nigeria\">Nigeria</option>\n              <option value=\"Niue\">Niue</option>\n              <option value=\"Norfolk Island\">Norfolk Island</option>\n              <option value=\"North Macedonia\">North Macedonia</option>\n              <option value=\"Norway\">Norway</option>\n              <option value=\"Oman\">Oman</option>\n              <option value=\"Pakistan\">Pakistan</option>\n              <option value=\"Palestinian Territory, Occupied\">\n                Palestinian Territories\n              </option>\n              <option value=\"Panama\">Panama</option>\n              <option value=\"Papua New Guinea\">Papua New Guinea</option>\n              <option value=\"Paraguay\">Paraguay</option>\n              <option value=\"Peru\">Peru</option>\n              <option value=\"Philippines\">Philippines</option>\n              <option value=\"Pitcairn\">Pitcairn Islands</option>\n              <option value=\"Poland\">Poland</option>\n              <option value=\"Portugal\">Portugal</option>\n              <option value=\"Qatar\">Qatar</option>\n              <option value=\"Reunion\">Réunion</option>\n              <option value=\"Romania\">Romania</option>\n              <option value=\"Russia\">Russia</option>\n              <option value=\"Rwanda\">Rwanda</option>\n              <option value=\"Samoa\">Samoa</option>\n              <option value=\"San Marino\">San Marino</option>\n              <option value=\"Sao Tome And Principe\">\n                São Tomé &amp; Príncipe\n              </option>\n              <option value=\"Saudi Arabia\">Saudi Arabia</option>\n              <option value=\"Senegal\">Senegal</option>\n              <option value=\"Serbia\">Serbia</option>\n              <option value=\"Seychelles\">Seychelles</option>\n              <option value=\"Sierra Leone\">Sierra Leone</option>\n              <option value=\"Singapore\">Singapore</option>\n              <option value=\"Sint Maarten\">Sint Maarten</option>\n              <option value=\"Slovakia\">Slovakia</option>\n              <option value=\"Slovenia\">Slovenia</option>\n              <option value=\"Solomon Islands\">Solomon Islands</option>\n              <option value=\"Somalia\">Somalia</option>\n              <option value=\"South Africa\">South Africa</option>\n              <option value=\"South Georgia And The South Sandwich Islands\">\n                South Georgia &amp; South Sandwich Islands\n              </option>\n              <option value=\"South Korea\">South Korea</option>\n              <option value=\"South Sudan\">South Sudan</option>\n              <option value=\"Spain\">Spain</option>\n              <option value=\"Sri Lanka\">Sri Lanka</option>\n              <option value=\"Saint Barthélemy\">St. Barthélemy</option>\n              <option value=\"Saint Helena\">St. Helena</option>\n              <option value=\"Saint Kitts And Nevis\">\n                St. Kitts &amp; Nevis\n              </option>\n              <option value=\"Saint Lucia\">St. Lucia</option>\n              <option value=\"Saint Martin\">St. Martin</option>\n              <option value=\"Saint Pierre And Miquelon\">\n                St. Pierre &amp; Miquelon\n              </option>\n              <option value=\"St. Vincent\">St. Vincent &amp; Grenadines</option>\n              <option value=\"Sudan\">Sudan</option>\n              <option value=\"Suriname\">Suriname</option>\n              <option value=\"Svalbard And Jan Mayen\">\n                Svalbard &amp; Jan Mayen\n              </option>\n              <option value=\"Sweden\">Sweden</option>\n              <option value=\"Switzerland\">Switzerland</option>\n              <option value=\"Taiwan\">Taiwan</option>\n              <option value=\"Tajikistan\">Tajikistan</option>\n              <option value=\"Tanzania, United Republic Of\">Tanzania</option>\n              <option value=\"Thailand\">Thailand</option>\n              <option value=\"Timor Leste\">Timor-Leste</option>\n              <option value=\"Togo\">Togo</option>\n              <option value=\"Tokelau\">Tokelau</option>\n              <option value=\"Tonga\">Tonga</option>\n              <option value=\"Trinidad and Tobago\">Trinidad &amp; Tobago</option>\n              <option value=\"Tristan da Cunha\">Tristan da Cunha</option>\n              <option value=\"Tunisia\">Tunisia</option>\n              <option value=\"Turkey\">Turkey</option>\n              <option value=\"Turkmenistan\">Turkmenistan</option>\n              <option value=\"Turks and Caicos Islands\">\n                Turks &amp; Caicos Islands\n              </option>\n              <option value=\"Tuvalu\">Tuvalu</option>\n              <option value=\"United States Minor Outlying Islands\">\n                U.S. Outlying Islands\n              </option>\n              <option value=\"Uganda\">Uganda</option>\n              <option value=\"Ukraine\">Ukraine</option>\n              <option value=\"United Arab Emirates\">United Arab Emirates</option>\n              <option value=\"United Kingdom\">United Kingdom</option>\n              <option value=\"United States\">United States</option>\n              <option value=\"Uruguay\">Uruguay</option>\n              <option value=\"Uzbekistan\">Uzbekistan</option>\n              <option value=\"Vanuatu\">Vanuatu</option>\n              <option value=\"Holy See (Vatican City State)\">\n                Vatican City\n              </option>\n              <option value=\"Venezuela\">Venezuela</option>\n              <option value=\"Vietnam\">Vietnam</option>\n              <option value=\"Wallis And Futuna\">Wallis &amp; Futuna</option>\n              <option value=\"Western Sahara\">Western Sahara</option>\n              <option value=\"Yemen\">Yemen</option>\n              <option value=\"Zambia\">Zambia</option>\n              <option value=\"Zimbabwe\">Zimbabwe</option>\n            </select>\n          </div>\n          <div className=\"input-field\">\n            <label className=\"active\" htmlFor=\"zip\">\n              Postal/Zip Code\n            </label>\n            <input\n              className=\"validate\"\n              type=\"text\"\n              id=\"zip\"\n              name=\"zip\"\n              value={zip}\n              onChange={handleZipChange}\n              pattern=\"\\d*\"\n            />\n          </div>\n        </GridThreeColumn>\n\n        <div className=\"input-field\">\n          <label className=\"active\" htmlFor=\"phone\">\n            Phone\n          </label>\n          <input\n            className=\"validate\"\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            value={phone}\n            onChange={handlePhoneChange}\n            placeholder=\"Phone\"\n            pattern=\"\\d*\"\n          />\n        </div>\n        <Actions>\n          <button\n            type=\"submit\"\n            className=\"yellow-btn\"\n            onClick={updateShippingAddress}\n            disabled={loading}\n          >\n            {loading ? <Spinner /> : \"Submit\"}\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"red-btn\"\n            onClick={() => setOpen(false)}\n          >\n            Cancel\n          </button>\n        </Actions>\n      </form>\n      <Toast show={showToast} isError={isToastError} toastMsg={toastMsg} />\n    </Container>\n  )\n}\n\nexport default ShippingAddressForm\n","import React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\nconst load3 = keyframes`\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.div`\n  font-size: 10px;\n  margin: 50px auto;\n  text-indent: -9999em;\n  width: 11em;\n  height: 11em;\n  border-radius: 50%;\n  background: #82280b;\n  background: -moz-linear-gradient(\n    left,\n    #82280b 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  background: -webkit-linear-gradient(\n    left,\n    #82280b 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  background: -o-linear-gradient(left, #82280b 10%, rgba(255, 255, 255, 0) 42%);\n  background: -ms-linear-gradient(\n    left,\n    #82280b 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  background: linear-gradient(\n    to right,\n    #82280b 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  position: relative;\n  -webkit-animation: ${load3} 1.4s infinite linear;\n  animation: ${load3} 1.4s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  &:before {\n    width: 50%;\n    height: 50%;\n    background: #fff;\n    border-radius: 100% 0 0 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: \"\";\n  }\n  &:after {\n    background: #fff;\n    width: 75%;\n    height: 75%;\n    border-radius: 50%;\n    content: \"\";\n    margin: auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  }\n`\n\nconst Loader = () => <Spinner>Loading...</Spinner>\n\nexport default Loader\n","import React, { useState } from \"react\"\nimport Spinner from \"./Spinner\"\n\ninterface Props {\n  color: string\n  handleClick: () => Promise<boolean>\n  label: string\n}\n\nconst Button = (props: Props) => {\n  const { color, handleClick, label } = props\n\n  const [loading, setLoading] = useState<boolean>(false)\n  const [error, setError] = useState<boolean>(false)\n\n  const handler = async () => {\n    setLoading(true)\n    setError(false)\n    const error = await handleClick()\n    setLoading(false)\n    if (error) {\n      setError(true)\n    }\n  }\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={`${color}`}\n        onClick={() => handler()}\n        disabled={loading}\n      >\n        {loading ? <Spinner /> : label}\n      </button>\n      {error && (\n        <p className=\"text-center\">There was a problem, please try again</p>\n      )}\n    </>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./Button\"\nimport { Subscription } from \"../types/subscription\"\n\nconst ActionsContainer = styled.div`\n  height: 100%;\n  .actions-buttons-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 15px;\n  }\n  .top {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n  .bottom {\n    display: flex;\n    flex-direction: column;\n    button {\n      margin-top: 5px;\n    }\n  }\n  button {\n    border-radius: 8px;\n    border: 1px solid #000;\n    font-size: 14px;\n    padding: 15px 10px;\n    line-height: 1;\n    text-align: center;\n    text-transform: capatalize !important;\n  }\n  button:disabled {\n    opacity: 0.5;\n  }\n  .yellow-btn {\n    color: #000;\n    background-color: var(--yellow);\n  }\n  .yellow-btn:hover {\n    color: #000;\n    background-color: var(--yellow-focus);\n  }\n  .red-btn {\n    color: #fff;\n    background-color: var(--red);\n  }\n  .red-btn:hover {\n    color: #fff;\n    background-color: var(--red-focus);\n  }\n  @media only screen and (max-width: 768px) {\n    .actions-buttons-container button {\n      margin: 0.5em;\n    }\n  }\n  @media only screen and (max-width: 468px) {\n    .actions-buttons-container {\n      padding: 1em;\n      button {\n        margin: 0.5em 0;\n      }\n    }\n  }\n`\n\ninterface Props {\n  customerId: string\n  subscription: Subscription\n  updateStatus: (\n    customerId: string,\n    subscriptionId: string,\n    status: string\n  ) => Promise<boolean>\n  updatePaymentMethod: (\n    customerId: string,\n    paymentMethodId: string\n  ) => Promise<boolean>\n  handleUpdateAddress: (subscription: Subscription) => void\n}\n\nconst ActionButtons = (props: Props) => {\n  const {\n    customerId,\n    subscription,\n    updateStatus,\n    updatePaymentMethod,\n    handleUpdateAddress,\n  } = props\n\n  enum Status {\n    ACTIVE = \"ACTIVE\",\n    PAUSE = \"PAUSED\",\n    CANCEL = \"CANCELLED\",\n  }\n\n  const handleActivate = async () =>\n    updateStatus(customerId, subscription.id, Status.ACTIVE)\n\n  const handlePause = async () =>\n    updateStatus(customerId, subscription.id, Status.PAUSE)\n\n  const handleCancel = async () =>\n    updateStatus(customerId, subscription.id, Status.CANCEL)\n\n  const handleUpdatePaymentMethod = async () =>\n    updatePaymentMethod(customerId, subscription.customerPaymentMethod.id)\n\n  if (subscription.status !== Status.CANCEL) {\n    return (\n      <ActionsContainer>\n        <div className=\"actions-buttons-container\">\n          <div className=\"top\">\n            {subscription.status === Status.ACTIVE ? (\n              <Button\n                color=\"yellow-btn\"\n                handleClick={handlePause}\n                label=\"Pause Subscription\"\n              />\n            ) : (\n              subscription.status !== Status.CANCEL && (\n                <Button\n                  color=\"yellow-btn\"\n                  handleClick={handleActivate}\n                  label=\"Activate Subscription\"\n                />\n              )\n            )}\n            <button\n              className=\"yellow-btn\"\n              type=\"button\"\n              onClick={() => handleUpdateAddress(subscription)}\n            >\n              Update Ship Address\n            </button>\n            <Button\n              color=\"yellow-btn\"\n              handleClick={handleUpdatePaymentMethod}\n              label=\"Update Payment Method\"\n            />\n          </div>\n          <div className=\"bottom\">\n            {subscription.status !== Status.CANCEL && (\n              <Button\n                color=\"red-btn\"\n                handleClick={handleCancel}\n                label=\"Cancel Subscription\"\n              />\n            )}\n          </div>\n        </div>\n      </ActionsContainer>\n    )\n  }\n  return <div />\n}\n\nexport default ActionButtons\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport ActionButtons from \"./ActionButtons\"\nimport { formatDate, formatSubscriptionId } from \"../utils\"\nimport { SubscriptionNode, Subscription, LineNode } from \"../types/subscription\"\n\nconst SubscriptionContainer = styled.div`\n  border: 1px solid #000;\n  border-radius: 5px;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  .subscription-details {\n    cursor: pointer;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: 1fr;\n    justify-content: space-between;\n    padding: 10px 20px;\n    border-radius: 5px 5px 0 0;\n    border-bottom: 1px solid #000;\n    background-color: #ccc;\n    p {\n      margin: 0;\n    }\n    .view {\n      color: var(--red);\n      svg {\n        height: 12px;\n        width: auto;\n      }\n    }\n  }\n  .subscription-more-details {\n    padding: 1em;\n    p {\n      margin: 0;\n    }\n  }\n  .order-box {\n    display: grid;\n    grid-template-columns: 3fr 1fr;\n  }\n  .product {\n    display: grid;\n    grid-template-columns: 20% 1fr 20%;\n    grid-template-rows: 1fr;\n    div {\n      padding: 1em;\n    }\n  }\n  .product-title {\n    color: var(--red);\n    font-size: 1.3em;\n  }\n  @media only screen and (max-width: 768px) {\n    .subscription-details {\n      grid-template-columns: repeat(3, 1fr);\n      row-gap: 1em;\n    }\n  }\n  @media only screen and (max-width: 768px) and (min-width: 469px) {\n    .subscription-details div:nth-child(3n) {\n      text-align: right;\n    }\n  }\n  @media only screen and (max-width: 468px) {\n    .subscription-details {\n      grid-template-columns: repeat(2, 1fr);\n      div {\n        padding: 1em 0;\n      }\n      div:nth-child(even) {\n        text-align: right;\n      }\n    }\n    .order-box {\n      display: grid;\n      grid-template-columns: 1fr;\n    }\n    .product {\n      grid-template-columns: 100%;\n    }\n  }\n`\n\nconst ChevronUp = styled.svg`\n  transform: rotate(180deg);\n`\n\nconst IconChenvronUp = () => (\n  <ChevronUp\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    role=\"presentation\"\n    className=\"icon icon-chevron-down\"\n    viewBox=\"0 0 9 9\"\n  >\n    <path\n      d=\"M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z\"\n      fill=\"#fff\"\n    />\n  </ChevronUp>\n)\n\nconst IconChenvronDown = () => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    role=\"presentation\"\n    className=\"icon icon-chevron-down\"\n    viewBox=\"0 0 9 9\"\n  >\n    <path\n      d=\"M8.542 2.558a.625.625 0 0 1 0 .884l-3.6 3.6a.626.626 0 0 1-.884 0l-3.6-3.6a.625.625 0 1 1 .884-.884L4.5 5.716l3.158-3.158a.625.625 0 0 1 .884 0z\"\n      fill=\"#fff\"\n    />\n  </svg>\n)\n\ninterface Props {\n  index: number\n  subscription: SubscriptionNode\n  customerId: string\n  updateStatus: (\n    customerId: string,\n    subscriptionId: string,\n    status: string\n  ) => Promise<boolean>\n  updatePaymentMethod: (\n    customerId: string,\n    paymentMethodId: string\n  ) => Promise<boolean>\n  handleUpdateAddress: (subscription: Subscription) => void\n  handleSubscriptionToggle: (type: string, key: number) => void\n  expanded: boolean\n}\n\nconst SubscriptionCard: React.FC<Props> = ({\n  index,\n  subscription,\n  customerId,\n  updateStatus,\n  updatePaymentMethod,\n  handleUpdateAddress,\n  handleSubscriptionToggle,\n  expanded,\n}) => {\n  const s = subscription.node\n\n  const getTotalPrice = () => {\n    let total = 0\n    s.lines.edges.forEach((line: LineNode) => {\n      const l = line.node\n      total += parseFloat(l.currentPrice.amount) * parseInt(l.quantity)\n    })\n    // add shipping\n    total += parseFloat(s.deliveryPrice.amount)\n    return total.toFixed(2)\n  }\n\n  const getShippingAddress = () => {\n    const {\n      name,\n      address1,\n      address2,\n      city,\n      provinceCode,\n      zip,\n    } = s.deliveryMethod.address\n    let shipTo = `${name}, ${address1}`\n    if (address2 !== \"\") {\n      shipTo += `, ${address2}`\n    }\n    shipTo += ` ${city}, ${provinceCode} ${zip}`\n\n    return shipTo\n  }\n\n  const getBillingInfo = () => {\n    const { maskedNumber, brand, name } = s.customerPaymentMethod.instrument\n    return `${name}, ${brand ? brand.toUpperCase() : \"\"} ${maskedNumber}`\n  }\n\n  return (\n    <SubscriptionContainer className=\"section subscription\">\n      <div\n        className=\"subscription-details\"\n        onClick={() => handleSubscriptionToggle(\"toggle\", index)}\n        aria-hidden=\"true\"\n      >\n        <div className=\"subscription-created-at\">\n          <p className=\"text-bold\">START DATE</p>\n          <p>{formatDate(s.createdAt)}</p>\n        </div>\n        <div className=\"subscription-status\">\n          <p className=\"text-bold\">STATUS</p>\n          <p>{s.status}</p>\n        </div>\n        <div className=\"subscripiton-next-order-date\">\n          <p className=\"text-bold\">NEXT SHIP DATE</p>\n          <p>{formatDate(s.nextBillingDate)}</p>\n        </div>\n        <div className=\"subscription-total\">\n          <p className=\"text-bold\">TOTAL</p>\n          <p>${getTotalPrice()}</p>\n        </div>\n        <div className=\"subscription-id\">\n          <p className=\"text-bold\">ID #{formatSubscriptionId(s.id)}</p>\n          <p className=\"view\">\n            {expanded ? (\n              <span className=\"show-less\">\n                Show Less <IconChenvronUp />\n              </span>\n            ) : (\n              <span className=\"view-more\">\n                View Details <IconChenvronDown />\n              </span>\n            )}\n          </p>\n        </div>\n      </div>\n\n      {expanded && (\n        <div className=\"collapsible\">\n          <div className=\"subscription-more-details\">\n            <p>\n              <span className=\"text-bold\">Frequency: </span>\n              Every {s.billingPolicy.intervalCount}{\" \"}\n              {s.billingPolicy.interval.toLowerCase()}\n              {s.billingPolicy.intervalCount > 1 ? \"s\" : \"\"}\n            </p>\n            <p>\n              <span className=\"text-bold\">Delivery Cost: </span> $\n              {parseFloat(s.deliveryPrice.amount).toFixed(2)}\n            </p>\n            <p>\n              <span className=\"text-bold\">Ships To: </span>\n              {getShippingAddress()}\n            </p>\n            <p>\n              <span className=\"text-bold\">Billed To: </span>\n              {getBillingInfo()}\n            </p>\n          </div>\n          <div className=\"order-box\">\n            <div className=\"product-grid-container grid-container\">\n              {s.lines.edges.map((line: LineNode) => {\n                const l = line.node\n                return (\n                  <div key={line.node.id} className=\"product\">\n                    <div className=\"product-image\">\n                      {l.variantImage && (\n                        <img\n                          key={line.node.id}\n                          src={l.variantImage.originalSrc}\n                          alt={l.variantImage.altText}\n                          className=\"responsive-img\"\n                        />\n                      )}\n                    </div>\n                    <div className=\"product-information\">\n                      <h4 className=\"product-title\">\n                        {l.title}\n                        {/* {l.title} {l.variantTitle && ` - ${l.variantTitle}`} */}\n                      </h4>\n                      <p className=\"no-margin\">SKU: {l.sku}</p>\n                      <p className=\"no-margin\">\n                        PRICE: ${parseFloat(l.currentPrice.amount).toFixed(2)}\n                      </p>\n                    </div>\n                    <div className=\"product-quantity\">\n                      <p>Quantity: {l.quantity}</p>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n            <div className=\"actions-container\">\n              <ActionButtons\n                customerId={customerId}\n                subscription={s}\n                updateStatus={updateStatus}\n                updatePaymentMethod={updatePaymentMethod}\n                handleUpdateAddress={handleUpdateAddress}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </SubscriptionContainer>\n  )\n}\n\nexport default SubscriptionCard\n","import React, { useEffect, useState, useReducer, useCallback } from \"react\"\nimport queryString from \"query-string\"\nimport \"./App.css\"\nimport { accountRedirect } from \"./utils\"\nimport { SubscriptionNode, Subscription } from \"./types/subscription\"\nimport ShippingAddressForm from \"./components/ShippingAddressForm\"\nimport Loader from \"./components/Loader\"\nimport Toast from \"./components/Toast\"\nimport SubscriptionCard from \"./components/SubscriptionCard\"\n\nconst ACTIONS = {\n  TOGGLE: \"toggle\",\n}\n\nconst reducer = (state: any, action: { type: string; key: number }) => {\n  switch (action.type) {\n    case ACTIONS.TOGGLE:\n      Object.keys(state).forEach((key: any) => {\n        if (state[key] !== state[action.key]) state[key] = false\n      })\n      return {\n        ...state,\n        [action.key]: !state[action.key],\n      }\n    default:\n      throw new Error()\n  }\n}\n\nconst App = () => {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [shop, setShop] = useState<string>(\"\")\n  const [token, setToken] = useState<string>(\"\")\n  const [customerId, setCustomerId] = useState<string | null>(null)\n  const [subscriptions, setSubscriptions] = useState<SubscriptionNode[]>()\n  const [subscription, setSubscription] = useState<Subscription | null>(null)\n  const [open, setOpen] = useState<boolean>(false)\n  // toast\n  const [showToast, setShowToast] = useState<boolean>(false)\n  const [isToastError, setIsToastError] = useState<boolean>(false)\n  const [toastMsg, setToastMsg] = useState<string>(\"\")\n\n  const [state, dispatch] = useReducer(reducer, () => {\n    const count = subscriptions?.length\n    if (count) {\n      const initialState: { [key: number]: boolean } = {}\n      for (let i = 0; i < count; i++) {\n        initialState[i] = false\n      }\n      return initialState\n    }\n    return {}\n  })\n\n  const handleHideToast = () => {\n    setTimeout(() => {\n      setIsToastError(false)\n      setToastMsg(\"\")\n      setShowToast(false)\n    }, 3000)\n  }\n\n  const getSubscriptions = useCallback(\n    async (shopName: string, accessToken: string, customer: string) => {\n      try {\n        const response = await fetch(`/apps/app_proxy/subscriptions`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            token: accessToken,\n            shop: shopName,\n            customerId: customer,\n          }),\n        })\n        const data = await response.json()\n        setSubscriptions(data)\n        setLoading(false)\n      } catch (e: any) {\n        console.log(\"ERROR\", e.message)\n        setIsToastError(true)\n        setToastMsg(\"ERROR, Failed to get Subscriptions.\")\n        setShowToast(true)\n        handleHideToast()\n        accountRedirect()\n      }\n    },\n    []\n  )\n\n  useEffect(() => {\n    const params = queryString.parse(window.location.search)\n    if (params.customer_id) {\n      const shopName = params.shop as string\n      const customer = params.customer_id as string\n      const accessToken = params.token as string\n      if (shopName && accessToken && customer) {\n        setShop(shopName)\n        setToken(accessToken)\n        setCustomerId(customer)\n        getSubscriptions(shopName, accessToken, customer)\n      }\n    }\n  }, [getSubscriptions])\n\n  const updateStatus = async (\n    customerId: string,\n    subscriptionId: string,\n    status: string\n  ) => {\n    try {\n      const response = await fetch(`/apps/app_proxy/subscription/edit`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token,\n          shop,\n          customerId,\n          subscriptionContractId: subscriptionId,\n          status,\n        }),\n      })\n      const data = await response.json()\n      setIsToastError(false)\n      setToastMsg(\"Updated Successfully!\")\n      setShowToast(true)\n      handleHideToast()\n      if (data.updatedSubscriptionContractId) {\n        if (shop && customerId && token) {\n          getSubscriptions(shop, token, customerId)\n        }\n      }\n      return false\n    } catch (e: any) {\n      console.log(\"ERROR\", e.message)\n      setIsToastError(true)\n      setToastMsg(\"ERROR, Failed to Update.\")\n      setShowToast(true)\n      handleHideToast()\n      accountRedirect()\n      return true\n    }\n  }\n\n  const updatePaymentMethod = async (\n    customerId: string,\n    paymentMethodId: string\n  ) => {\n    try {\n      const response = await fetch(`/apps/app_proxy/subscription/payment`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token,\n          shop,\n          customerId,\n          paymentMethodId,\n        }),\n      })\n      const data = await response.json()\n      if (data.customerId) {\n        setIsToastError(false)\n        setToastMsg(\"Payment Method Update Email Sent.\")\n        setShowToast(true)\n        handleHideToast()\n        return false\n      } else {\n        return true\n      }\n    } catch (e: any) {\n      console.log(\"ERROR\", e.message)\n      setIsToastError(true)\n      setToastMsg(\"ERROR, Failed to Send Update Email.\")\n      setShowToast(true)\n      handleHideToast()\n      accountRedirect()\n      return true\n    }\n  }\n\n  const handleUpdateAddress = (subscription: Subscription) => {\n    setSubscription(subscription)\n    setOpen(true)\n  }\n\n  const handleSubscriptionToggle = (type: string, key: number) => {\n    dispatch({ type, key })\n  }\n\n  return (\n    <div className=\"App container page-width\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {open && customerId && subscription && (\n            <ShippingAddressForm\n              shop={shop}\n              customerId={customerId}\n              token={token}\n              subscription={subscription}\n              setOpen={setOpen}\n              getSubscriptions={getSubscriptions}\n            />\n          )}\n          {!open && customerId && subscriptions && (\n            <div>\n              <h3>Subscriptions</h3>\n              <div className=\"subscriptions-container\">\n                <div className=\"subscriptions\">\n                  {subscriptions.length > 0 ? (\n                    subscriptions.map(\n                      // eslint-disable-next-line no-shadow\n                      (subscription: SubscriptionNode, index: number) => (\n                        <SubscriptionCard\n                          key={index}\n                          index={index}\n                          subscription={subscription}\n                          customerId={customerId}\n                          updateStatus={updateStatus}\n                          updatePaymentMethod={updatePaymentMethod}\n                          handleUpdateAddress={handleUpdateAddress}\n                          handleSubscriptionToggle={handleSubscriptionToggle}\n                          expanded={state[index]}\n                        />\n                      )\n                    )\n                  ) : (\n                    <p style={{ textAlign: \"center\" }}>\n                      No Subscriptions Found!\n                      <br />\n                      <a href=\"/account\">Go Back To Account.</a>\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n      <Toast show={showToast} isError={isToastError} toastMsg={toastMsg} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}